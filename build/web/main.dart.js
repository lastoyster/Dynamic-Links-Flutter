// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const html = dart_sdk.html;
  const js_util = dart_sdk.js_util;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = flutter_sdk.src__widgets__framework;
  const app = flutter_sdk.src__material__app;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const text_style = flutter_sdk.src__painting__text_style;
  const binding = flutter_sdk.src__widgets__binding;
  const plugin_registry = flutter_sdk.src__plugin_registry;
  const platform = flutter_sdk.src__foundation__platform;
  const equality = flutter_sdk.src__equality;
  const message_codecs = flutter_sdk.src__services__message_codecs;
  const platform_channel = flutter_sdk.src__services__platform_channel;
  const message_codec = flutter_sdk.src__services__message_codec;
  const binary_messenger = flutter_sdk.src__services__binary_messenger;
  const binding$ = flutter_sdk.src__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var firebase_core = Object.create(dart.library);
  var firebase_dynamic_links = Object.create(dart.library);
  var firebase_core_web = Object.create(dart.library);
  var firebase_core_platform_interface = Object.create(dart.library);
  var firebase_dynamic_links_platform_interface = Object.create(dart.library);
  var js$ = Object.create(dart.library);
  var core$ = Object.create(dart.library);
  var messages$46pigeon = Object.create(dart.library);
  var plugin_platform_interface = Object.create(dart.library);
  var mocks = Object.create(dart.library);
  var test_api = Object.create(dart.library);
  var platform_interface_firebase_dynamic_links = Object.create(dart.library);
  var pending_dynamic_link_data = Object.create(dart.library);
  var pending_dynamic_link_data_android = Object.create(dart.library);
  var pending_dynamic_link_data_ios = Object.create(dart.library);
  var short_dynamic_link = Object.create(dart.library);
  var short_dynamic_link_type = Object.create(dart.library);
  var google_analytics_parameters = Object.create(dart.library);
  var ios_parameters = Object.create(dart.library);
  var itunes_connect_analytics_parameters = Object.create(dart.library);
  var navigation_info_parameters = Object.create(dart.library);
  var social_meta_tag_parameters = Object.create(dart.library);
  var android_parameters = Object.create(dart.library);
  var dynamic_link_parameters = Object.create(dart.library);
  var match_type = Object.create(dart.library);
  var app$ = Object.create(dart.library);
  var core_interop = Object.create(dart.library);
  var app_interop = Object.create(dart.library);
  var method_channel_firebase_dynamic_links = Object.create(dart.library);
  var firebase_core_web_interop = Object.create(dart.library);
  var convert_match_type = Object.create(dart.library);
  var exception = Object.create(dart.library);
  var es6_interop = Object.create(dart.library);
  var func = Object.create(dart.library);
  var js$0 = Object.create(dart.library);
  var js_interop = Object.create(dart.library);
  var utils = Object.create(dart.library);
  var _flutterfire_internals = Object.create(dart.library);
  var exception$ = Object.create(dart.library);
  var $toString = dartx.toString;
  var $cast = dartx.cast;
  var $_get = dartx._get;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $hashCode = dartx.hashCode;
  var $putIfAbsent = dartx.putIfAbsent;
  var $type = dartx.type;
  var $text = dartx.text;
  var $head = dartx.head;
  var $append = dartx.append;
  var $values = dartx.values;
  var $contains = dartx.contains;
  var $remove = dartx.remove;
  var $split = dartx.split;
  var $length = dartx.length;
  var $replaceAll = dartx.replaceAll;
  var $where = dartx.where;
  var $forEach = dartx.forEach;
  var $_set = dartx._set;
  var $containsKey = dartx.containsKey;
  var $addAll = dartx.addAll;
  var $replaceFirst = dartx.replaceFirst;
  var $_equals = dartx._equals;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T$.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ListOfString()])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T$.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T$.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    PendingDynamicLinkDataToFutureOfvoid: () => (T$.PendingDynamicLinkDataToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [pending_dynamic_link_data.PendingDynamicLinkData])))(),
    FirebaseAppPlatformToFirebaseApp: () => (T$.FirebaseAppPlatformToFirebaseApp = dart.constFn(dart.fnType(firebase_core.FirebaseApp, [firebase_core_platform_interface.FirebaseAppPlatform])))(),
    VoidToFirebaseDynamicLinks: () => (T$.VoidToFirebaseDynamicLinks = dart.constFn(dart.fnType(firebase_dynamic_links.FirebaseDynamicLinks, [])))(),
    PendingDynamicLinkDataN: () => (T$.PendingDynamicLinkDataN = dart.constFn(dart.nullable(pending_dynamic_link_data.PendingDynamicLinkData)))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    MapOfObjectN$ObjectN: () => (T$.MapOfObjectN$ObjectN = dart.constFn(core.Map$(T$.ObjectN(), T$.ObjectN())))(),
    MapNOfObjectN$ObjectN: () => (T$.MapNOfObjectN$ObjectN = dart.constFn(dart.nullable(T$.MapOfObjectN$ObjectN())))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ExpandoOfObject: () => (T$.ExpandoOfObject = dart.constFn(core.Expando$(core.Object)))(),
    IdentityMapOfString$FirebaseDynamicLinks: () => (T$.IdentityMapOfString$FirebaseDynamicLinks = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_dynamic_links.FirebaseDynamicLinks)))(),
    VoidToFirebaseWebService: () => (T$.VoidToFirebaseWebService = dart.constFn(dart.fnType(firebase_core_web.FirebaseWebService, [])))(),
    dynamicToString: () => (T$.dynamicToString = dart.constFn(dart.fnType(core.String, [dart.dynamic])))(),
    StringToString: () => (T$.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    FirebaseWebServiceToFutureOfvoid: () => (T$.FirebaseWebServiceToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [firebase_core_web.FirebaseWebService])))(),
    ListOfFirebaseAppPlatform: () => (T$.ListOfFirebaseAppPlatform = dart.constFn(core.List$(firebase_core_platform_interface.FirebaseAppPlatform)))(),
    AppToFirebaseAppPlatform: () => (T$.AppToFirebaseAppPlatform = dart.constFn(dart.fnType(firebase_core_platform_interface.FirebaseAppPlatform, [app$.App])))(),
    VoidToListOfFirebaseAppPlatform: () => (T$.VoidToListOfFirebaseAppPlatform = dart.constFn(dart.fnType(T$.ListOfFirebaseAppPlatform(), [])))(),
    VoidToString: () => (T$.VoidToString = dart.constFn(dart.fnType(core.String, [])))(),
    VoidToApp: () => (T$.VoidToApp = dart.constFn(dart.fnType(app$.App, [])))(),
    IdentityMapOfString$FirebaseWebService: () => (T$.IdentityMapOfString$FirebaseWebService = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_core_web.FirebaseWebService)))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    ObjectAndStackTraceToNever: () => (T$.ObjectAndStackTraceToNever = dart.constFn(dart.fnType(dart.Never, [core.Object, core.StackTrace])))(),
    IdentityMapOfString$StringN: () => (T$.IdentityMapOfString$StringN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StringN())))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    PigeonInitializeResponseN: () => (T$.PigeonInitializeResponseN = dart.constFn(dart.nullable(messages$46pigeon.PigeonInitializeResponse)))(),
    PigeonInitializeResponseNTobool: () => (T$.PigeonInitializeResponseNTobool = dart.constFn(dart.fnType(core.bool, [T$.PigeonInitializeResponseN()])))(),
    IdentityMapOfString$MethodChannelFirebaseApp: () => (T$.IdentityMapOfString$MethodChannelFirebaseApp = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_core_platform_interface.MethodChannelFirebaseApp)))(),
    ObjectNAndObjectNAndObjectN__Tovoid: () => (T$.ObjectNAndObjectNAndObjectN__Tovoid = dart.constFn(dart.fnType(dart.void, [T$.ObjectN()], [T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN()])))(),
    StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy: () => (T$.StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy = dart.constFn(dart.fnType(dart.packageJSType("DomTrustedTypePolicy", true), [core.String, dart.nullable(dart.packageJSType("DomTrustedTypePolicyOptions", true))])))(),
    StringToDomTrustedScriptUrl: () => (T$.StringToDomTrustedScriptUrl = dart.constFn(dart.fnType(dart.packageJSType("DomTrustedScriptUrl", true), [core.String])))(),
    dynamicToApp: () => (T$.dynamicToApp = dart.constFn(dart.fnType(app$.App, [dart.dynamic])))(),
    JSArrayOfObjectN: () => (T$.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T$.ObjectN())))(),
    ListOfObjectN: () => (T$.ListOfObjectN = dart.constFn(core.List$(T$.ObjectN())))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    BasicMessageChannelOfObjectN: () => (T$.BasicMessageChannelOfObjectN = dart.constFn(platform_channel.BasicMessageChannel$(T$.ObjectN())))(),
    ListNOfObjectN: () => (T$.ListNOfObjectN = dart.constFn(dart.nullable(T$.ListOfObjectN())))(),
    ListOfPigeonInitializeResponseN: () => (T$.ListOfPigeonInitializeResponseN = dart.constFn(core.List$(T$.PigeonInitializeResponseN())))(),
    PigeonFirebaseOptionsN: () => (T$.PigeonFirebaseOptionsN = dart.constFn(dart.nullable(messages$46pigeon.PigeonFirebaseOptions)))(),
    IdentityMapOfStringN$ObjectN: () => (T$.IdentityMapOfStringN$ObjectN = dart.constFn(_js_helper.IdentityMap$(T$.StringN(), T$.ObjectN())))(),
    JSArrayOfPigeonInitializeResponseN: () => (T$.JSArrayOfPigeonInitializeResponseN = dart.constFn(_interceptors.JSArray$(T$.PigeonInitializeResponseN())))(),
    FutureOfListOfObjectN: () => (T$.FutureOfListOfObjectN = dart.constFn(async.Future$(T$.ListOfObjectN())))(),
    ObjectNToFutureOfListOfObjectN: () => (T$.ObjectNToFutureOfListOfObjectN = dart.constFn(dart.fnType(T$.FutureOfListOfObjectN(), [T$.ObjectN()])))(),
    IdentityMapOfString$dynamic: () => (T$.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    ExpandoOfApp: () => (T$.ExpandoOfApp = dart.constFn(core.Expando$(app$.App)))(),
    LinkedHashMapOfString$dynamic: () => (T$.LinkedHashMapOfString$dynamic = dart.constFn(collection.LinkedHashMap$(core.String, dart.dynamic)))(),
    FutureOfNull: () => (T$.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    MethodCallToFutureOfNull: () => (T$.MethodCallToFutureOfNull = dart.constFn(dart.fnType(T$.FutureOfNull(), [message_codec.MethodCall])))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    LinkedHashMapOfString$StringN: () => (T$.LinkedHashMapOfString$StringN = dart.constFn(collection.LinkedHashMap$(core.String, T$.StringN())))(),
    ListN: () => (T$.ListN = dart.constFn(dart.nullable(core.List)))(),
    StreamControllerOfPendingDynamicLinkData: () => (T$.StreamControllerOfPendingDynamicLinkData = dart.constFn(async.StreamController$(pending_dynamic_link_data.PendingDynamicLinkData)))(),
    dynamicTodynamic: () => (T$.dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.dynamic])))(),
    dynamicAnddynamicTovoid: () => (T$.dynamicAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic, dart.dynamic])))(),
    ObjectTodynamic: () => (T$.ObjectTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.Object])))(),
    VoidToRN: () => (T$.VoidToRN = dart.constFn(dart.gFnType(R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [__t$RN(), []];
    }, R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [T$.ObjectN()];
    })))(),
    dynamicAnddynamicToNever: () => (T$.dynamicAnddynamicToNever = dart.constFn(dart.fnType(dart.Never, [dart.dynamic, dart.dynamic])))(),
    ObjectNTobool: () => (T$.ObjectNTobool = dart.constFn(dart.fnType(core.bool, [T$.ObjectN()])))(),
    LinkedHashMapOfString$Object: () => (T$.LinkedHashMapOfString$Object = dart.constFn(collection.LinkedHashMap$(core.String, core.Object)))(),
    ObjectAndStackTraceTodynamic: () => (T$.ObjectAndStackTraceTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.Object, core.StackTrace])))(),
    __ToStream: () => (T$.__ToStream = dart.constFn(dart.fnType(async.Stream, [], {arguments: dart.dynamic, onError: T$.ObjectAndStackTraceTodynamic()}, {})))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T$.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.fn(firebase_core.FirebaseApp['_#_#tearOff'], T$.FirebaseAppPlatformToFirebaseApp());
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: short_dynamic_link_type.ShortDynamicLinkType.prototype,
        [_Enum__name]: "short",
        [_Enum_index]: 1
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C4() {
      return C[4] = dart.fn(firebase_core_web._createFromJsApp, T$.AppToFirebaseAppPlatform());
    },
    get C5() {
      return C[5] = dart.fn(firebase_core_web._handleException, T$.ObjectAndStackTraceToNever());
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: T$.DefaultEqualityOfNever().prototype
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: equality.MapEquality.prototype,
        [MapEquality__valueEquality]: C[7] || CT.C7,
        [MapEquality__keyEquality]: C[7] || CT.C7
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: messages$46pigeon._FirebaseCoreHostApiCodec.prototype
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: test_api._TestFirebaseCoreHostApiCodec.prototype
      });
    },
    get C11() {
      return C[11] = dart.constMap(core.String, T$.StringN(), []);
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: short_dynamic_link_type.ShortDynamicLinkType.prototype,
        [_Enum__name]: "unguessable",
        [_Enum_index]: 0
      });
    },
    get C12() {
      return C[12] = dart.constList([C[13] || CT.C13, C[2] || CT.C2], short_dynamic_link_type.ShortDynamicLinkType);
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: match_type.MatchType.prototype,
        [_Enum__name]: "none",
        [_Enum_index]: 0
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: match_type.MatchType.prototype,
        [_Enum__name]: "weak",
        [_Enum_index]: 1
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: match_type.MatchType.prototype,
        [_Enum__name]: "high",
        [_Enum_index]: 2
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: match_type.MatchType.prototype,
        [_Enum__name]: "unique",
        [_Enum_index]: 3
      });
    },
    get C14() {
      return C[14] = dart.constList([C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18], match_type.MatchType);
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [StandardMethodCodec_messageCodec]: C[9] || CT.C9
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C[20] || CT.C20,
        [MethodChannel_name]: "plugins.flutter.io/firebase_dynamic_links"
      });
    },
    get C21() {
      return C[21] = dart.fn(_flutterfire_internals._testException, T$.ObjectNTobool());
    }
  }, false);
  var C = Array(22).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:firebase_core/firebase_core.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart",
    "package:plugin_platform_interface/plugin_platform_interface.dart",
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart",
    "package:firebase_dynamic_links/firebase_dynamic_links.dart",
    "package:firebase_core_web/firebase_core_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_core_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/method_channel/method_channel_firebase.dart",
    "package:firebase_core_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:firebase_core_platform_interface/src/pigeon/mocks.dart",
    "package:firebase_core_platform_interface/src/pigeon/test_api.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/pigeon/test_api.dart",
    "package:firebase_dynamic_links_platform_interface/src/platform_interface/platform_interface_firebase_dynamic_links.dart",
    "package:firebase_dynamic_links_platform_interface/src/pending_dynamic_link_data.dart",
    "package:firebase_dynamic_links_platform_interface/src/pending_dynamic_link_data_android.dart",
    "package:firebase_dynamic_links_platform_interface/src/pending_dynamic_link_data_ios.dart",
    "package:firebase_dynamic_links_platform_interface/src/short_dynamic_link.dart",
    "package:firebase_dynamic_links_platform_interface/src/short_dynamic_link_type.dart",
    "package:firebase_dynamic_links_platform_interface/src/google_analytics_parameters.dart",
    "package:firebase_dynamic_links_platform_interface/src/ios_parameters.dart",
    "package:firebase_dynamic_links_platform_interface/src/itunes_connect_analytics_parameters.dart",
    "package:firebase_dynamic_links_platform_interface/src/navigation_info_parameters.dart",
    "package:firebase_dynamic_links_platform_interface/src/social_meta_tag_parameters.dart",
    "package:firebase_dynamic_links_platform_interface/src/android_parameters.dart",
    "package:firebase_dynamic_links_platform_interface/src/dynamic_link_parameters.dart",
    "package:firebase_dynamic_links_platform_interface/src/match_type.dart",
    "package:firebase_core_web/src/interop/utils/js.dart",
    "package:firebase_core_web/src/interop/app.dart",
    "package:firebase_dynamic_links_platform_interface/src/method_channel/method_channel_firebase_dynamic_links.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.16/lib/_flutterfire_internals.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T$.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T$.ListOfStringTodynamic().as(C[0] || CT.C0)(T$.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T$.dynamicToNull()));
      }
    }, T$.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T$.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T$.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T$.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T$.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    createState() {
      return new main._MyAppState.new();
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    createState: dart.fnType(framework.State$(main.MyApp), [])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main._MyAppState = class _MyAppState extends framework.State$(main.MyApp) {
    build(context) {
      return new app.MaterialApp.new({home: new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Firebase Referral")}), body: new basic.Center.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new text.Text.new("Welcome", {style: new text_style.TextStyle.new({fontSize: 20})}), new text.Text.new("")])})})})});
    }
    static ['_#new#tearOff']() {
      return new main._MyAppState.new();
    }
  };
  (main._MyAppState.new = function() {
    main._MyAppState.__proto__.new.call(this);
    ;
  }).prototype = main._MyAppState.prototype;
  dart.addTypeTests(main._MyAppState);
  dart.addTypeCaches(main._MyAppState);
  dart.setMethodSignature(main._MyAppState, () => ({
    __proto__: dart.getMethods(main._MyAppState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._MyAppState, I[0]);
  main.main = function main$0() {
    return async.async(dart.void, function* main$() {
      binding.WidgetsFlutterBinding.ensureInitialized();
      yield firebase_core.Firebase.initializeApp();
      let initialLink = (yield firebase_dynamic_links.FirebaseDynamicLinks.instance.getInitialLink());
      main.handleLink(initialLink);
      firebase_dynamic_links.FirebaseDynamicLinks.instance.onLink.listen(dart.fn(event => async.async(dart.void, function*() {
        main.handleLink(event);
      }), T$.PendingDynamicLinkDataToFutureOfvoid()));
      binding.runApp(new main.MyApp.new());
    });
  };
  main.handleLink = function handleLink(data) {
    let t0, t0$, t0$0, t0$1;
    if (data != null) {
      let uri = data.link;
      core.print(data);
      core.print(uri);
      if (uri !== null) {
        let utmParameters = (t0 = data.utmParameters, t0 === null ? null : t0[$cast](core.String, core.String));
        core.print("UTM Source :" + dart.str((t0$ = utmParameters, t0$ == null ? null : t0$[$_get]("utm_source"))));
        core.print("UTM Medium :" + dart.str((t0$0 = utmParameters, t0$0 == null ? null : t0$0[$_get]("utm_medium"))));
        core.print("UTM Campaign :" + dart.str((t0$1 = utmParameters, t0$1 == null ? null : t0$1[$_get]("utm_campaign"))));
      }
    }
  };
  web_plugin_registrant.registerPlugins = function registerPlugins(pluginRegistrar = null) {
    let t0;
    let registrar = (t0 = pluginRegistrar, t0 == null ? plugin_registry.webPluginRegistrar : t0);
    firebase_core_web.FirebaseCoreWeb.registerWith(registrar);
    registrar.registerMessageHandler();
  };
  var _delegate$ = dart.privateName(firebase_core, "_delegate");
  firebase_core.FirebaseApp = class FirebaseApp extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_core.FirebaseApp.__(_delegate);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        yield this[_delegate$].delete();
      }).bind(this));
    }
    get name() {
      return this[_delegate$].name;
    }
    get options() {
      return this[_delegate$].options;
    }
    get isAutomaticDataCollectionEnabled() {
      return this[_delegate$].isAutomaticDataCollectionEnabled;
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return this[_delegate$].setAutomaticDataCollectionEnabled(enabled);
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return this[_delegate$].setAutomaticResourceManagementEnabled(enabled);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core.FirebaseApp.is(other)) return false;
      return other.name === this.name && other.options._equals(this.options);
    }
    get hashCode() {
      return core.Object.hash(this.name, this.options);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core.FirebaseApp)) + "(" + this.name + ")";
    }
  };
  (firebase_core.FirebaseApp.__ = function(_delegate) {
    this[_delegate$] = _delegate;
    firebase_core_platform_interface.FirebaseAppPlatform.verify(this[_delegate$]);
  }).prototype = firebase_core.FirebaseApp.prototype;
  dart.addTypeTests(firebase_core.FirebaseApp);
  dart.addTypeCaches(firebase_core.FirebaseApp);
  dart.setMethodSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getMethods(firebase_core.FirebaseApp.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setGetterSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getGetters(firebase_core.FirebaseApp.__proto__),
    name: core.String,
    options: firebase_core_platform_interface.FirebaseOptions,
    isAutomaticDataCollectionEnabled: core.bool
  }));
  dart.setLibraryUri(firebase_core.FirebaseApp, I[1]);
  dart.setFieldSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getFields(firebase_core.FirebaseApp.__proto__),
    [_delegate$]: dart.finalFieldType(firebase_core_platform_interface.FirebaseAppPlatform)
  }));
  dart.defineExtensionMethods(firebase_core.FirebaseApp, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core.FirebaseApp, ['hashCode']);
  firebase_core.Firebase = class Firebase extends core.Object {
    static ['_#_#tearOff']() {
      return new firebase_core.Firebase.__();
    }
    static get _delegate() {
      let t0;
      t0 = firebase_core.Firebase.delegatePackingProperty;
      return t0 == null ? firebase_core.Firebase.delegatePackingProperty = firebase_core_platform_interface.FirebasePlatform.instance : t0;
    }
    static get apps() {
      return firebase_core.Firebase._delegate.apps[$map](firebase_core.FirebaseApp, C[1] || CT.C1)[$toList]({growable: false});
    }
    static initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core.FirebaseApp, function* initializeApp() {
        let app = (yield firebase_core.Firebase._delegate.initializeApp({name: name, options: options}));
        return new firebase_core.FirebaseApp.__(app);
      });
    }
    static app(name = "[DEFAULT]") {
      let app = firebase_core.Firebase._delegate.app(name);
      return new firebase_core.FirebaseApp.__(app);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core.Firebase.is(other)) return false;
      return other.hashCode === this.hashCode;
    }
    get hashCode() {
      return this.toString()[$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core.Firebase));
    }
  };
  (firebase_core.Firebase.__ = function() {
    ;
  }).prototype = firebase_core.Firebase.prototype;
  dart.addTypeTests(firebase_core.Firebase);
  dart.addTypeCaches(firebase_core.Firebase);
  dart.setStaticMethodSignature(firebase_core.Firebase, () => ['initializeApp', 'app']);
  dart.setStaticGetterSignature(firebase_core.Firebase, () => ['_delegate', 'apps']);
  dart.setLibraryUri(firebase_core.Firebase, I[1]);
  dart.setStaticFieldSignature(firebase_core.Firebase, () => ['delegatePackingProperty']);
  dart.defineExtensionMethods(firebase_core.Firebase, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core.Firebase, ['hashCode']);
  dart.defineLazy(firebase_core.Firebase, {
    /*firebase_core.Firebase.delegatePackingProperty*/get delegatePackingProperty() {
      return null;
    },
    set delegatePackingProperty(value) {}
  }, false);
  var app$0 = dart.privateName(firebase_dynamic_links, "FirebaseDynamicLinks.app");
  var _delegatePackingProperty = dart.privateName(firebase_dynamic_links, "_delegatePackingProperty");
  var _delegate = dart.privateName(firebase_dynamic_links, "_delegate");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var _appName$ = dart.privateName(firebase_core_platform_interface, "_appName");
  var _methodChannelName$ = dart.privateName(firebase_core_platform_interface, "_methodChannelName");
  plugin_platform_interface.PlatformInterface = class PlatformInterface extends core.Object {
    static verify(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: true});
    }
    static verifyToken(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: false});
    }
    static _verify(instance, token, opts) {
      let preventConstObject = opts && 'preventConstObject' in opts ? opts.preventConstObject : null;
      if (plugin_platform_interface.MockPlatformInterfaceMixin.is(instance)) {
        let assertionsEnabled = false;
        if (!dart.fn(() => {
          assertionsEnabled = true;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 92, 14, "() {\n        assertionsEnabled = true;\n        return true;\n      }()");
        if (!assertionsEnabled) {
          dart.throw(new core.AssertionError.new("`MockPlatformInterfaceMixin` is not intended for use in release builds."));
        }
        return;
      }
      if (preventConstObject && plugin_platform_interface.PlatformInterface._instanceTokens._get(instance) === (C[3] || CT.C3)) {
        dart.throw(new core.AssertionError.new("`const Object()` cannot be used as the token."));
      }
      if (token !== plugin_platform_interface.PlatformInterface._instanceTokens._get(instance)) {
        dart.throw(new core.AssertionError.new("Platform interfaces must not be implemented with `implements`"));
      }
    }
  };
  (plugin_platform_interface.PlatformInterface.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    plugin_platform_interface.PlatformInterface._instanceTokens._set(this, token);
  }).prototype = plugin_platform_interface.PlatformInterface.prototype;
  dart.addTypeTests(plugin_platform_interface.PlatformInterface);
  dart.addTypeCaches(plugin_platform_interface.PlatformInterface);
  dart.setStaticMethodSignature(plugin_platform_interface.PlatformInterface, () => ['verify', 'verifyToken', '_verify']);
  dart.setLibraryUri(plugin_platform_interface.PlatformInterface, I[3]);
  dart.setStaticFieldSignature(plugin_platform_interface.PlatformInterface, () => ['_instanceTokens']);
  dart.defineLazy(plugin_platform_interface.PlatformInterface, {
    /*plugin_platform_interface.PlatformInterface._instanceTokens*/get _instanceTokens() {
      return new (T$.ExpandoOfObject()).new();
    }
  }, false);
  firebase_core_platform_interface.FirebasePluginPlatform = class FirebasePluginPlatform extends plugin_platform_interface.PlatformInterface {
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebasePluginPlatform._token);
    }
    get pluginConstants() {
      let appConstants = T$.MapNOfObjectN$ObjectN().as(firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[$_get](this[_appName$]));
      if (appConstants != null && appConstants[$_get](this[_methodChannelName$]) != null) {
        return core.Map.as(dart.nullCheck(appConstants[$_get](this[_methodChannelName$])));
      }
      return new _js_helper.LinkedMap.new();
    }
  };
  (firebase_core_platform_interface.FirebasePluginPlatform.new = function(_appName, _methodChannelName) {
    this[_appName$] = _appName;
    this[_methodChannelName$] = _methodChannelName;
    firebase_core_platform_interface.FirebasePluginPlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebasePluginPlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebasePluginPlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebasePluginPlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebasePluginPlatform);
  dart.setStaticMethodSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ['verify']);
  dart.setGetterSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebasePluginPlatform.__proto__),
    pluginConstants: core.Map
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebasePluginPlatform, I[4]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebasePluginPlatform.__proto__),
    [_appName$]: dart.finalFieldType(core.String),
    [_methodChannelName$]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ['_constantsForPluginApps', '_token']);
  dart.defineLazy(firebase_core_platform_interface.FirebasePluginPlatform, {
    /*firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps*/get _constantsForPluginApps() {
      return new _js_helper.LinkedMap.new();
    },
    set _constantsForPluginApps(value) {},
    /*firebase_core_platform_interface.FirebasePluginPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_dynamic_links.FirebaseDynamicLinks = class FirebaseDynamicLinks extends firebase_core_platform_interface.FirebasePluginPlatform {
    get app() {
      return this[app$0];
    }
    set app(value) {
      this[app$0] = value;
    }
    static ['_#_#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new firebase_dynamic_links.FirebaseDynamicLinks.__({app: app});
    }
    static get instance() {
      return firebase_dynamic_links.FirebaseDynamicLinks.instanceFor({app: firebase_core.Firebase.app()});
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      if (platform.defaultTargetPlatform === platform.TargetPlatform.android || app.name === "[DEFAULT]") {
        return firebase_dynamic_links.FirebaseDynamicLinks._cachedInstances[$putIfAbsent](app.name, dart.fn(() => new firebase_dynamic_links.FirebaseDynamicLinks.__({app: app}), T$.VoidToFirebaseDynamicLinks()));
      }
      dart.throw(new core.UnsupportedError.new("FirebaseDynamicLinks.instanceFor() only supports non-default FirebaseApp instances on Android."));
    }
    get [_delegate]() {
      let t0;
      t0 = this[_delegatePackingProperty];
      return t0 == null ? this[_delegatePackingProperty] = platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform.instanceFor({app: this.app}) : t0;
    }
    getInitialLink() {
      return async.async(T$.PendingDynamicLinkDataN(), (function* getInitialLink() {
        return this[_delegate].getInitialLink();
      }).bind(this));
    }
    getDynamicLink(url) {
      return async.async(T$.PendingDynamicLinkDataN(), (function* getDynamicLink() {
        return this[_delegate].getDynamicLink(url);
      }).bind(this));
    }
    get onLink() {
      return this[_delegate].onLink;
    }
    buildLink(parameters) {
      return async.async(core.Uri, (function* buildLink() {
        return this[_delegate].buildLink(parameters);
      }).bind(this));
    }
    buildShortLink(parameters, opts) {
      let shortLinkType = opts && 'shortLinkType' in opts ? opts.shortLinkType : C[2] || CT.C2;
      return async.async(short_dynamic_link.ShortDynamicLink, (function* buildShortLink() {
        return this[_delegate].buildShortLink(parameters, {shortLinkType: shortLinkType});
      }).bind(this));
    }
  };
  (firebase_dynamic_links.FirebaseDynamicLinks.__ = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[_delegatePackingProperty] = null;
    this[app$0] = app;
    firebase_dynamic_links.FirebaseDynamicLinks.__proto__.new.call(this, app.name, "plugins.flutter.io/firebase_dynamic_links");
    ;
  }).prototype = firebase_dynamic_links.FirebaseDynamicLinks.prototype;
  dart.addTypeTests(firebase_dynamic_links.FirebaseDynamicLinks);
  dart.addTypeCaches(firebase_dynamic_links.FirebaseDynamicLinks);
  dart.setMethodSignature(firebase_dynamic_links.FirebaseDynamicLinks, () => ({
    __proto__: dart.getMethods(firebase_dynamic_links.FirebaseDynamicLinks.__proto__),
    getInitialLink: dart.fnType(async.Future$(dart.nullable(pending_dynamic_link_data.PendingDynamicLinkData)), []),
    getDynamicLink: dart.fnType(async.Future$(dart.nullable(pending_dynamic_link_data.PendingDynamicLinkData)), [core.Uri]),
    buildLink: dart.fnType(async.Future$(core.Uri), [dynamic_link_parameters.DynamicLinkParameters]),
    buildShortLink: dart.fnType(async.Future$(short_dynamic_link.ShortDynamicLink), [dynamic_link_parameters.DynamicLinkParameters], {shortLinkType: short_dynamic_link_type.ShortDynamicLinkType}, {})
  }));
  dart.setStaticMethodSignature(firebase_dynamic_links.FirebaseDynamicLinks, () => ['instanceFor']);
  dart.setGetterSignature(firebase_dynamic_links.FirebaseDynamicLinks, () => ({
    __proto__: dart.getGetters(firebase_dynamic_links.FirebaseDynamicLinks.__proto__),
    [_delegate]: platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform,
    onLink: async.Stream$(pending_dynamic_link_data.PendingDynamicLinkData)
  }));
  dart.setStaticGetterSignature(firebase_dynamic_links.FirebaseDynamicLinks, () => ['instance']);
  dart.setLibraryUri(firebase_dynamic_links.FirebaseDynamicLinks, I[5]);
  dart.setFieldSignature(firebase_dynamic_links.FirebaseDynamicLinks, () => ({
    __proto__: dart.getFields(firebase_dynamic_links.FirebaseDynamicLinks.__proto__),
    [_delegatePackingProperty]: dart.fieldType(dart.nullable(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform)),
    app: dart.fieldType(firebase_core.FirebaseApp)
  }));
  dart.setStaticFieldSignature(firebase_dynamic_links.FirebaseDynamicLinks, () => ['_cachedInstances']);
  dart.defineLazy(firebase_dynamic_links.FirebaseDynamicLinks, {
    /*firebase_dynamic_links.FirebaseDynamicLinks._cachedInstances*/get _cachedInstances() {
      return new (T$.IdentityMapOfString$FirebaseDynamicLinks()).new();
    }
  }, false);
  var _isAutomaticDataCollectionEnabled = dart.privateName(firebase_core_web, "_isAutomaticDataCollectionEnabled");
  var name$ = dart.privateName(firebase_core_platform_interface, "FirebaseAppPlatform.name");
  var options$ = dart.privateName(firebase_core_platform_interface, "FirebaseAppPlatform.options");
  var _isDefault = dart.privateName(firebase_core_platform_interface, "_isDefault");
  firebase_core_platform_interface.FirebaseAppPlatform = class FirebaseAppPlatform extends plugin_platform_interface.PlatformInterface {
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get options() {
      return this[options$];
    }
    set options(value) {
      super.options = value;
    }
    static ['_#new#tearOff'](name, options) {
      return new firebase_core_platform_interface.FirebaseAppPlatform.new(name, options);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebaseAppPlatform._token);
    }
    get [_isDefault]() {
      return this.name === "[DEFAULT]";
    }
    get isAutomaticDataCollectionEnabled() {
      dart.throw(new core.UnimplementedError.new("isAutomaticDataCollectionEnabled has not been implemented."));
    }
    delete() {
      return async.async(dart.void, function* $delete() {
        dart.throw(new core.UnimplementedError.new("delete() has not been implemented."));
      });
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return async.async(dart.void, function* setAutomaticDataCollectionEnabled() {
        dart.throw(new core.UnimplementedError.new("setAutomaticDataCollectionEnabled() has not been implemented."));
      });
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return async.async(dart.void, function* setAutomaticResourceManagementEnabled() {
        dart.throw(new core.UnimplementedError.new("setAutomaticResourceManagementEnabled() has not been implemented."));
      });
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseAppPlatform.is(other)) return false;
      return other.name === this.name && other.options._equals(this.options);
    }
    get hashCode() {
      return core.Object.hash(this.name, this.options);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core_platform_interface.FirebaseAppPlatform)) + "(" + this.name + ")";
    }
  };
  (firebase_core_platform_interface.FirebaseAppPlatform.new = function(name, options) {
    this[name$] = name;
    this[options$] = options;
    firebase_core_platform_interface.FirebaseAppPlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebaseAppPlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebaseAppPlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseAppPlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseAppPlatform);
  dart.setMethodSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setStaticMethodSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ['verify']);
  dart.setGetterSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    [_isDefault]: core.bool,
    isAutomaticDataCollectionEnabled: core.bool
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseAppPlatform, I[4]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    name: dart.finalFieldType(core.String),
    options: dart.finalFieldType(firebase_core_platform_interface.FirebaseOptions)
  }));
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ['_token']);
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseAppPlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseAppPlatform, ['hashCode']);
  dart.defineLazy(firebase_core_platform_interface.FirebaseAppPlatform, {
    /*firebase_core_platform_interface.FirebaseAppPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_core_web.FirebaseAppWeb = class FirebaseAppWeb extends firebase_core_platform_interface.FirebaseAppPlatform {
    static ['_#_#tearOff'](name, options) {
      return new firebase_core_web.FirebaseAppWeb.__(name, options);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        yield core$.app(this.name).delete();
      }).bind(this));
    }
    get isAutomaticDataCollectionEnabled() {
      return this[_isAutomaticDataCollectionEnabled];
    }
    setAutomaticDataCollectionEnabled(enabled) {
      this[_isAutomaticDataCollectionEnabled] = enabled;
      return T$.FutureOfvoid().value();
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return T$.FutureOfvoid().value();
    }
  };
  (firebase_core_web.FirebaseAppWeb.__ = function(name, options) {
    this[_isAutomaticDataCollectionEnabled] = false;
    firebase_core_web.FirebaseAppWeb.__proto__.new.call(this, name, options);
    ;
  }).prototype = firebase_core_web.FirebaseAppWeb.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseAppWeb);
  dart.addTypeCaches(firebase_core_web.FirebaseAppWeb);
  dart.setLibraryUri(firebase_core_web.FirebaseAppWeb, I[6]);
  dart.setFieldSignature(firebase_core_web.FirebaseAppWeb, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseAppWeb.__proto__),
    [_isAutomaticDataCollectionEnabled]: dart.fieldType(core.bool)
  }));
  var name$0 = dart.privateName(firebase_core_web, "FirebaseWebService.name");
  var override$ = dart.privateName(firebase_core_web, "FirebaseWebService.override");
  var ensurePluginInitialized$ = dart.privateName(firebase_core_web, "FirebaseWebService.ensurePluginInitialized");
  firebase_core_web.FirebaseWebService = class FirebaseWebService extends core.Object {
    get name() {
      return this[name$0];
    }
    set name(value) {
      this[name$0] = value;
    }
    get override() {
      return this[override$];
    }
    set override(value) {
      this[override$] = value;
    }
    get ensurePluginInitialized() {
      return this[ensurePluginInitialized$];
    }
    set ensurePluginInitialized(value) {
      this[ensurePluginInitialized$] = value;
    }
    static ['_#_#tearOff'](name, opts) {
      let override = opts && 'override' in opts ? opts.override : null;
      let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
      return new firebase_core_web.FirebaseWebService.__(name, {override: override, ensurePluginInitialized: ensurePluginInitialized});
    }
  };
  (firebase_core_web.FirebaseWebService.__ = function(name, opts) {
    let override = opts && 'override' in opts ? opts.override : null;
    let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
    this[name$0] = name;
    this[override$] = override;
    this[ensurePluginInitialized$] = ensurePluginInitialized;
    ;
  }).prototype = firebase_core_web.FirebaseWebService.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseWebService);
  dart.addTypeCaches(firebase_core_web.FirebaseWebService);
  dart.setLibraryUri(firebase_core_web.FirebaseWebService, I[6]);
  dart.setFieldSignature(firebase_core_web.FirebaseWebService, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseWebService.__proto__),
    name: dart.fieldType(core.String),
    override: dart.fieldType(dart.nullable(core.String)),
    ensurePluginInitialized: dart.fieldType(dart.nullable(dart.fnType(async.Future$(dart.void), [app$.App])))
  }));
  var _defaultTrustedPolicyName = dart.privateName(firebase_core_web, "_defaultTrustedPolicyName");
  var _ignoredServiceScripts = dart.privateName(firebase_core_web, "_ignoredServiceScripts");
  var _initializeCore = dart.privateName(firebase_core_web, "_initializeCore");
  firebase_core_platform_interface.FirebasePlatform = class FirebasePlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return firebase_core_platform_interface.FirebasePlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebasePlatform._token);
      firebase_core_platform_interface.FirebasePlatform._instance = instance;
    }
    get apps() {
      dart.throw(new core.UnimplementedError.new("apps has not been implemented."));
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      dart.throw(new core.UnimplementedError.new("initializeApp() has not been implemented."));
    }
    app(name = "[DEFAULT]") {
      dart.throw(new core.UnimplementedError.new("app() has not been implemented."));
    }
  };
  (firebase_core_platform_interface.FirebasePlatform.new = function() {
    firebase_core_platform_interface.FirebasePlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebasePlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebasePlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebasePlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebasePlatform);
  dart.setMethodSignature(firebase_core_platform_interface.FirebasePlatform, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.FirebasePlatform.__proto__),
    initializeApp: dart.fnType(async.Future$(firebase_core_platform_interface.FirebaseAppPlatform), [], {name: dart.nullable(core.String), options: dart.nullable(firebase_core_platform_interface.FirebaseOptions)}, {}),
    app: dart.fnType(firebase_core_platform_interface.FirebaseAppPlatform, [], [core.String])
  }));
  dart.setGetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebasePlatform.__proto__),
    apps: core.List$(firebase_core_platform_interface.FirebaseAppPlatform)
  }));
  dart.setStaticGetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ['instance']);
  dart.setStaticSetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ['instance']);
  dart.setLibraryUri(firebase_core_platform_interface.FirebasePlatform, I[4]);
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebasePlatform, () => ['_token', '_instance']);
  dart.defineLazy(firebase_core_platform_interface.FirebasePlatform, {
    /*firebase_core_platform_interface.FirebasePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*firebase_core_platform_interface.FirebasePlatform._instance*/get _instance() {
      return new firebase_core_platform_interface.MethodChannelFirebase.new();
    },
    set _instance(value) {}
  }, false);
  firebase_core_web.FirebaseCoreWeb = class FirebaseCoreWeb extends firebase_core_platform_interface.FirebasePlatform {
    static registerService(service, opts) {
      let productNameOverride = opts && 'productNameOverride' in opts ? opts.productNameOverride : null;
      let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
      firebase_core_web.FirebaseCoreWeb._services[$putIfAbsent](service, dart.fn(() => new firebase_core_web.FirebaseWebService.__(service, {override: productNameOverride, ensurePluginInitialized: ensurePluginInitialized}), T$.VoidToFirebaseWebService()));
    }
    static registerWith(registrar) {
      firebase_core_platform_interface.FirebasePlatform.instance = new firebase_core_web.FirebaseCoreWeb.new();
    }
    get firebaseSDKVersion() {
      let t0;
      return core.String.as((t0 = js.context._get("flutterfire_web_sdk_version"), t0 == null ? "10.7.0" : t0));
    }
    get [_ignoredServiceScripts]() {
      try {
        let ignored = js.JsObject.fromBrowserObject(core.Object.as(js.context._get("flutterfire_ignore_scripts")));
        if (core.Iterable.is(ignored)) {
          return core.Iterable.as(ignored)[$map](core.String, dart.fn(e => dart.toString(e), T$.dynamicToString()))[$toList]({growable: false});
        }
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
        } else
          throw e$;
      }
      return T$.JSArrayOfString().of([]);
    }
    injectSrcScript(src, windowVar) {
      return async.async(dart.void, (function* injectSrcScript() {
        let trustedUrl = null;
        let trustedPolicyName = this[_defaultTrustedPolicyName] + windowVar;
        if (dart.global.trustedTypes != null) {
          js$['DomConsoleExtension|get#debug'](dart.global.console)("TrustedTypes available. Creating policy:", trustedPolicyName);
          let factory = dart.nullCheck(dart.global.trustedTypes);
          try {
            let policy = js$['DomTrustedTypePolicyFactoryExtension|createPolicy'](factory, trustedPolicyName, {createScriptURL: js.allowInterop(T$.StringToString(), dart.fn(url => src, T$.StringToString()))});
            trustedUrl = js$['DomTrustedTypePolicyExtension|createScriptURL'](policy, src);
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
              dart.rethrow(e$);
            } else
              throw e$;
          }
        }
        let script = html.ScriptElement.new();
        script[$type] = "text/javascript";
        script.crossOrigin = "anonymous";
        script[$text] = "      window.ff_trigger_" + windowVar + " = async (callback) => {\n        console.debug(\"Initializing Firebase " + windowVar + "\");\n        callback(await import(\"" + dart.str(trustedUrl != null ? js_util._callMethodUnchecked0(dart.dynamic, trustedUrl, "toString") : src) + "\"));\n      };\n    ";
        if (!(html.document[$head] != null)) dart.assertFailed(null, I[7], 137, 12, "document.head != null");
        dart.nullCheck(html.document[$head])[$append](script);
        let completer = async.Completer.new();
        js.context.callMethod("ff_trigger_" + windowVar, [dart.fn(module => {
            js.context._set(windowVar, module);
            js.context.deleteProperty("ff_trigger_" + windowVar);
            completer.complete();
          }, T$.dynamicToNull())]);
        yield completer.future;
      }).bind(this));
    }
    [_initializeCore]() {
      return async.async(dart.void, (function* _initializeCore() {
        if (js.context._get("firebase_core") != null) {
          return;
        }
        let version = this.firebaseSDKVersion;
        let ignored = this[_ignoredServiceScripts];
        yield async.Future.wait(dart.void, firebase_core_web.FirebaseCoreWeb._services[$values][$map](T$.FutureOfvoid(), dart.fn(service => {
          let t2, t2$;
          if (ignored[$contains]((t2 = service.override, t2 == null ? service.name : t2))) {
            return async.Future.value();
          }
          return this.injectSrcScript("https://www.gstatic.com/firebasejs/" + version + "/firebase-" + service.name + ".js", "firebase_" + dart.str((t2$ = service.override, t2$ == null ? service.name : t2$)));
        }, T$.FirebaseWebServiceToFutureOfvoid())));
      }).bind(this));
    }
    get apps() {
      return firebase_core_web.guardNotInitialized(T$.ListOfFirebaseAppPlatform(), dart.fn(() => core$.apps[$map](firebase_core_platform_interface.FirebaseAppPlatform, C[4] || CT.C4)[$toList]({growable: false}), T$.VoidToListOfFirebaseAppPlatform()));
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core_platform_interface.FirebaseAppPlatform, (function* initializeApp() {
        yield this[_initializeCore]();
        firebase_core_web.guardNotInitialized(core.String, dart.fn(() => dart.global.firebase_core.SDK_VERSION, T$.VoidToString()));
        if (!dart.fn(() => {
          if (dart.global.firebase_core.SDK_VERSION !== "10.7.0") {
            core.print("            WARNING: FlutterFire for Web is explicitly tested against Firebase JS SDK version \"" + "10.7.0" + "\"\n            but your currently specifying \"" + dart.global.firebase_core.SDK_VERSION + "\" by either the imported Firebase JS SDKs in your web/index.html\n            file or by providing an override - this may lead to unexpected issues in your application. It is recommended that you change all of the versions of the\n            Firebase JS SDK version \"" + "10.7.0" + "\":\n\n            If you override the version manually:\n              change:\n                <script>window.flutterfire_web_sdk_version = '" + dart.global.firebase_core.SDK_VERSION + "';</script>\n              to:\n                <script>window.flutterfire_web_sdk_version = '" + "10.7.0" + "';</script>\n\n            If you import the Firebase scripts in index.html, instead allow FlutterFire to manage this for you by removing\n            any Firebase scripts in your web/index.html file:\n                e.g. remove: <script src=\"https://www.gstatic.com/firebasejs/" + dart.global.firebase_core.SDK_VERSION + "/firebase-app.js\"></script>\n          ");
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 201, 7, "() {\n        if (firebase.SDK_VERSION != supportedFirebaseJsSdkVersion) {\n          // ignore: avoid_print\n          print(\n            '''\n            WARNING: FlutterFire for Web is explicitly tested against Firebase JS SDK version \"$supportedFirebaseJsSdkVersion\"\n            but your currently specifying \"${firebase.SDK_VERSION}\" by either the imported Firebase JS SDKs in your web/index.html\n            file or by providing an override - this may lead to unexpected issues in your application. It is recommended that you change all of the versions of the\n            Firebase JS SDK version \"$supportedFirebaseJsSdkVersion\":\n\n            If you override the version manually:\n              change:\n                <script>window.flutterfire_web_sdk_version = '${firebase.SDK_VERSION}';</script>\n              to:\n                <script>window.flutterfire_web_sdk_version = '$supportedFirebaseJsSdkVersion';</script>\n\n            If you import the Firebase scripts in index.html, instead allow FlutterFire to manage this for you by removing\n            any Firebase scripts in your web/index.html file:\n                e.g. remove: <script src=\"https://www.gstatic.com/firebasejs/${firebase.SDK_VERSION}/firebase-app.js\"></script>\n          ''',\n          );\n        }\n\n        return true;\n      }()");
        let app = null;
        if (name == null || name === "[DEFAULT]") {
          let defaultAppExists = false;
          try {
            app = core$.app();
            defaultAppExists = true;
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
            } else
              throw e$;
          }
          if (defaultAppExists) {
            if (options != null) {
              if (options.apiKey !== dart.nullCheck(app).options.apiKey || options.databaseURL !== app.options.databaseURL || options.storageBucket !== app.options.storageBucket) {
                dart.throw(firebase_core_platform_interface.duplicateApp("[DEFAULT]"));
              }
            }
          } else {
            if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating the default app.", I[7], 255, 11, "options != null");
            app = core$.initializeApp({apiKey: dart.nullCheck(options).apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
          }
        }
        if (name != null && name !== "[DEFAULT]") {
          if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating a secondary Firebase app.", I[7], 277, 9, "options != null");
          try {
            app = core$.initializeApp({name: name, apiKey: dart.nullCheck(options).apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
          } catch (e$0) {
            let e = dart.getThrown(e$0);
            if (core.Object.is(e)) {
              if (firebase_core_web._getJSErrorCode(e) === "app/duplicate-app") {
                dart.throw(firebase_core_platform_interface.duplicateApp(name));
              }
              dart.throw(firebase_core_web._catchJSError(e));
            } else
              throw e$0;
          }
        }
        let appCheck = firebase_core_web.FirebaseCoreWeb._services[$remove]("app-check");
        if (appCheck != null) {
          yield dart.nullCheck(appCheck.ensurePluginInitialized)(dart.nullCheck(app));
        }
        yield async.Future.wait(dart.void, firebase_core_web.FirebaseCoreWeb._services[$values][$map](T$.FutureOfvoid(), dart.fn(service => {
          let ensureInitializedFunction = service.ensurePluginInitialized;
          if (ensureInitializedFunction == null || app == null) {
            return async.Future.value();
          }
          return ensureInitializedFunction(app);
        }, T$.FirebaseWebServiceToFutureOfvoid())));
        return firebase_core_web._createFromJsApp(dart.nullCheck(app));
      }).bind(this));
    }
    app(name = "[DEFAULT]") {
      let app = null;
      try {
        app = firebase_core_web.guardNotInitialized(app$.App, dart.fn(() => core$.app(name), T$.VoidToApp()));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          if (firebase_core_web._getJSErrorCode(e) === "app/no-app") {
            dart.throw(firebase_core_platform_interface.noAppExists(name));
          }
          dart.throw(firebase_core_web._catchJSError(e));
        } else
          throw e$;
      }
      return firebase_core_web._createFromJsApp(app);
    }
    static ['_#new#tearOff']() {
      return new firebase_core_web.FirebaseCoreWeb.new();
    }
  };
  (firebase_core_web.FirebaseCoreWeb.new = function() {
    this[_defaultTrustedPolicyName] = "flutterfire-";
    firebase_core_web.FirebaseCoreWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_core_web.FirebaseCoreWeb.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseCoreWeb);
  dart.addTypeCaches(firebase_core_web.FirebaseCoreWeb);
  dart.setMethodSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getMethods(firebase_core_web.FirebaseCoreWeb.__proto__),
    injectSrcScript: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    [_initializeCore]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(firebase_core_web.FirebaseCoreWeb, () => ['registerService', 'registerWith']);
  dart.setGetterSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getGetters(firebase_core_web.FirebaseCoreWeb.__proto__),
    firebaseSDKVersion: core.String,
    [_ignoredServiceScripts]: core.List$(core.String)
  }));
  dart.setLibraryUri(firebase_core_web.FirebaseCoreWeb, I[6]);
  dart.setFieldSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseCoreWeb.__proto__),
    [_defaultTrustedPolicyName]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(firebase_core_web.FirebaseCoreWeb, () => ['_services']);
  dart.defineLazy(firebase_core_web.FirebaseCoreWeb, {
    /*firebase_core_web.FirebaseCoreWeb._services*/get _services() {
      return new (T$.IdentityMapOfString$FirebaseWebService()).from(["core", new firebase_core_web.FirebaseWebService.__("app", {override: "core"})]);
    },
    set _services(value) {}
  }, false);
  firebase_core_web._createFromJsApp = function _createFromJsApp(jsApp) {
    return new firebase_core_web.FirebaseAppWeb.__(jsApp.name, firebase_core_web._createFromJsOptions(jsApp.options));
  };
  firebase_core_web._createFromJsOptions = function _createFromJsOptions(options) {
    return new firebase_core_platform_interface.FirebaseOptions.new({apiKey: options.apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
  };
  firebase_core_web._getJSErrorCode = function _getJSErrorCode(e) {
    let t5;
    if (dart.equals(js_util.getProperty(dart.dynamic, core.Object.as(e), "name"), "FirebaseError")) {
      t5 = js_util.getProperty(T$.StringN(), core.Object.as(e), "code");
      return t5 == null ? "" : t5;
    }
    return "";
  };
  firebase_core_web._catchJSError = function _catchJSError(e) {
    let t5;
    if (dart.equals(js_util.getProperty(dart.dynamic, core.Object.as(e), "name"), "FirebaseError")) {
      let rawCode = js_util.getProperty(core.String, core.Object.as(e), "code");
      let code = rawCode;
      let message = (t5 = js_util.getProperty(T$.StringN(), core.Object.as(e), "message"), t5 == null ? "" : t5);
      if (code[$contains]("/")) {
        let chunks = code[$split]("/");
        code = chunks[$_get](chunks[$length] - 1);
      }
      return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: code, message: message[$replaceAll](" (" + rawCode + ")", "")});
    }
    dart.throw(e);
  };
  firebase_core_web._handleException = function _handleException(exception, stackTrace) {
    if (exception[$toString]()[$contains]("of undefined")) {
      dart.throw(firebase_core_platform_interface.coreNotInitialized());
    }
    core.Error.throwWithStackTrace(exception, stackTrace);
  };
  firebase_core_web.guardNotInitialized = function guardNotInitialized(R, cb) {
    try {
      let value = cb();
      if (async.Future.is(value)) {
        return R.as(value.catchError(C[5] || CT.C5));
      }
      return value;
    } catch (e) {
      let error = dart.getThrown(e);
      let stackTrace = dart.stackTrace(e);
      if (core.Object.is(error)) {
        firebase_core_web._handleException(error, stackTrace);
      } else
        throw e;
    }
  };
  dart.defineLazy(firebase_core_web, {
    /*firebase_core_web.supportedFirebaseJsSdkVersion*/get supportedFirebaseJsSdkVersion() {
      return "10.7.0";
    }
  }, false);
  var plugin$ = dart.privateName(firebase_core_platform_interface, "FirebaseException.plugin");
  var message$ = dart.privateName(firebase_core_platform_interface, "FirebaseException.message");
  var code$ = dart.privateName(firebase_core_platform_interface, "FirebaseException.code");
  var stackTrace$ = dart.privateName(firebase_core_platform_interface, "FirebaseException.stackTrace");
  firebase_core_platform_interface.FirebaseException = class FirebaseException extends core.Object {
    get plugin() {
      return this[plugin$];
    }
    set plugin(value) {
      super.plugin = value;
    }
    get message() {
      return this[message$];
    }
    set message(value) {
      super.message = value;
    }
    get code() {
      return this[code$];
    }
    set code(value) {
      super.code = value;
    }
    get stackTrace() {
      return this[stackTrace$];
    }
    set stackTrace(value) {
      super.stackTrace = value;
    }
    static ['_#new#tearOff'](opts) {
      let plugin = opts && 'plugin' in opts ? opts.plugin : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let stackTrace = opts && 'stackTrace' in opts ? opts.stackTrace : null;
      return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, message: message, code: code, stackTrace: stackTrace});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseException.is(other)) return false;
      return other.hashCode === this.hashCode;
    }
    get hashCode() {
      return core.Object.hash(this.plugin, this.code, this.message);
    }
    toString() {
      let output = "[" + this.plugin + "/" + this.code + "] " + dart.str(this.message);
      if (this.stackTrace != null) {
        output = output + ("\n\n" + dart.str(this.stackTrace));
      }
      return output;
    }
  };
  (firebase_core_platform_interface.FirebaseException.new = function(opts) {
    let t6;
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let stackTrace = opts && 'stackTrace' in opts ? opts.stackTrace : null;
    this[plugin$] = plugin;
    this[message$] = message;
    this[stackTrace$] = stackTrace;
    this[code$] = (t6 = code, t6 == null ? "unknown" : t6);
    ;
  }).prototype = firebase_core_platform_interface.FirebaseException.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseException);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseException);
  firebase_core_platform_interface.FirebaseException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseException, I[4]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseException, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseException.__proto__),
    plugin: dart.finalFieldType(core.String),
    message: dart.finalFieldType(dart.nullable(core.String)),
    code: dart.finalFieldType(core.String),
    stackTrace: dart.finalFieldType(dart.nullable(core.StackTrace))
  }));
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseException, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseException, ['hashCode']);
  var apiKey$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.apiKey");
  var appId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appId");
  var messagingSenderId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.messagingSenderId");
  var projectId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.projectId");
  var authDomain$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.authDomain");
  var databaseURL$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.databaseURL");
  var storageBucket$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.storageBucket");
  var measurementId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.measurementId");
  var trackingId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.trackingId");
  var deepLinkURLScheme$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.deepLinkURLScheme");
  var androidClientId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.androidClientId");
  var iosClientId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosClientId");
  var iosBundleId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosBundleId");
  var appGroupId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appGroupId");
  var MapEquality__valueEquality = dart.privateName(equality, "MapEquality._valueEquality");
  var MapEquality__keyEquality = dart.privateName(equality, "MapEquality._keyEquality");
  firebase_core_platform_interface.FirebaseOptions = class FirebaseOptions extends core.Object {
    get apiKey() {
      return this[apiKey$];
    }
    set apiKey(value) {
      super.apiKey = value;
    }
    get appId() {
      return this[appId$];
    }
    set appId(value) {
      super.appId = value;
    }
    get messagingSenderId() {
      return this[messagingSenderId$];
    }
    set messagingSenderId(value) {
      super.messagingSenderId = value;
    }
    get projectId() {
      return this[projectId$];
    }
    set projectId(value) {
      super.projectId = value;
    }
    get authDomain() {
      return this[authDomain$];
    }
    set authDomain(value) {
      super.authDomain = value;
    }
    get databaseURL() {
      return this[databaseURL$];
    }
    set databaseURL(value) {
      super.databaseURL = value;
    }
    get storageBucket() {
      return this[storageBucket$];
    }
    set storageBucket(value) {
      super.storageBucket = value;
    }
    get measurementId() {
      return this[measurementId$];
    }
    set measurementId(value) {
      super.measurementId = value;
    }
    get trackingId() {
      return this[trackingId$];
    }
    set trackingId(value) {
      super.trackingId = value;
    }
    get deepLinkURLScheme() {
      return this[deepLinkURLScheme$];
    }
    set deepLinkURLScheme(value) {
      super.deepLinkURLScheme = value;
    }
    get androidClientId() {
      return this[androidClientId$];
    }
    set androidClientId(value) {
      super.androidClientId = value;
    }
    get iosClientId() {
      return this[iosClientId$];
    }
    set iosClientId(value) {
      super.iosClientId = value;
    }
    get iosBundleId() {
      return this[iosBundleId$];
    }
    set iosBundleId(value) {
      super.iosBundleId = value;
    }
    get appGroupId() {
      return this[appGroupId$];
    }
    set appGroupId(value) {
      super.appGroupId = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
      let appId = opts && 'appId' in opts ? opts.appId : null;
      let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
      let projectId = opts && 'projectId' in opts ? opts.projectId : null;
      let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
      let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
      let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
      let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
      let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
      let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
      let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
      let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
      return new firebase_core_platform_interface.FirebaseOptions.new({apiKey: apiKey, appId: appId, messagingSenderId: messagingSenderId, projectId: projectId, authDomain: authDomain, databaseURL: databaseURL, storageBucket: storageBucket, measurementId: measurementId, trackingId: trackingId, deepLinkURLScheme: deepLinkURLScheme, androidClientId: androidClientId, iosClientId: iosClientId, iosBundleId: iosBundleId, appGroupId: appGroupId});
    }
    static ['_#fromPigeon#tearOff'](options) {
      return new firebase_core_platform_interface.FirebaseOptions.fromPigeon(options);
    }
    get asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["apiKey", this.apiKey, "appId", this.appId, "messagingSenderId", this.messagingSenderId, "projectId", this.projectId, "authDomain", this.authDomain, "databaseURL", this.databaseURL, "storageBucket", this.storageBucket, "measurementId", this.measurementId, "trackingId", this.trackingId, "deepLinkURLScheme", this.deepLinkURLScheme, "androidClientId", this.androidClientId, "iosClientId", this.iosClientId, "iosBundleId", this.iosBundleId, "appGroupId", this.appGroupId]);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseOptions.is(other)) return false;
      return (C[6] || CT.C6).equals(this.asMap, other.asMap);
    }
    get hashCode() {
      return (C[6] || CT.C6).hash(this.asMap);
    }
    toString() {
      return this.asMap[$toString]();
    }
  };
  (firebase_core_platform_interface.FirebaseOptions.new = function(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
    let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
    let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
    let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
    let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
    let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
    this[apiKey$] = apiKey;
    this[appId$] = appId;
    this[messagingSenderId$] = messagingSenderId;
    this[projectId$] = projectId;
    this[authDomain$] = authDomain;
    this[databaseURL$] = databaseURL;
    this[storageBucket$] = storageBucket;
    this[measurementId$] = measurementId;
    this[trackingId$] = trackingId;
    this[deepLinkURLScheme$] = deepLinkURLScheme;
    this[androidClientId$] = androidClientId;
    this[iosClientId$] = iosClientId;
    this[iosBundleId$] = iosBundleId;
    this[appGroupId$] = appGroupId;
    ;
  }).prototype = firebase_core_platform_interface.FirebaseOptions.prototype;
  (firebase_core_platform_interface.FirebaseOptions.fromPigeon = function(options) {
    this[apiKey$] = options.apiKey;
    this[appId$] = options.appId;
    this[messagingSenderId$] = options.messagingSenderId;
    this[projectId$] = options.projectId;
    this[authDomain$] = options.authDomain;
    this[databaseURL$] = options.databaseURL;
    this[storageBucket$] = options.storageBucket;
    this[measurementId$] = options.measurementId;
    this[trackingId$] = options.trackingId;
    this[deepLinkURLScheme$] = options.deepLinkURLScheme;
    this[androidClientId$] = options.androidClientId;
    this[iosClientId$] = options.iosClientId;
    this[iosBundleId$] = options.iosBundleId;
    this[appGroupId$] = options.appGroupId;
    ;
  }).prototype = firebase_core_platform_interface.FirebaseOptions.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseOptions);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseOptions);
  dart.setGetterSignature(firebase_core_platform_interface.FirebaseOptions, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebaseOptions.__proto__),
    asMap: core.Map$(core.String, dart.nullable(core.String))
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseOptions, I[4]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseOptions, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseOptions.__proto__),
    apiKey: dart.finalFieldType(core.String),
    appId: dart.finalFieldType(core.String),
    messagingSenderId: dart.finalFieldType(core.String),
    projectId: dart.finalFieldType(core.String),
    authDomain: dart.finalFieldType(dart.nullable(core.String)),
    databaseURL: dart.finalFieldType(dart.nullable(core.String)),
    storageBucket: dart.finalFieldType(dart.nullable(core.String)),
    measurementId: dart.finalFieldType(dart.nullable(core.String)),
    trackingId: dart.finalFieldType(dart.nullable(core.String)),
    deepLinkURLScheme: dart.finalFieldType(dart.nullable(core.String)),
    androidClientId: dart.finalFieldType(dart.nullable(core.String)),
    iosClientId: dart.finalFieldType(dart.nullable(core.String)),
    iosBundleId: dart.finalFieldType(dart.nullable(core.String)),
    appGroupId: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseOptions, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseOptions, ['hashCode']);
  var _initializeFirebaseAppFromMap = dart.privateName(firebase_core_platform_interface, "_initializeFirebaseAppFromMap");
  var _initializeCore$ = dart.privateName(firebase_core_platform_interface, "_initializeCore");
  firebase_core_platform_interface.MethodChannelFirebase = class MethodChannelFirebase extends firebase_core_platform_interface.FirebasePlatform {
    [_initializeCore$]() {
      return async.async(dart.void, (function* _initializeCore() {
        let apps = (yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeCore());
        apps[$where](dart.fn(element => element != null, T$.PigeonInitializeResponseNTobool()))[$cast](messages$46pigeon.PigeonInitializeResponse)[$forEach](dart.bind(this, _initializeFirebaseAppFromMap));
        firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized = true;
      }).bind(this));
    }
    [_initializeFirebaseAppFromMap](response) {
      let methodChannelFirebaseApp = new firebase_core_platform_interface.MethodChannelFirebaseApp.new(response.name, new firebase_core_platform_interface.FirebaseOptions.fromPigeon(response.options), {isAutomaticDataCollectionEnabled: response.isAutomaticDataCollectionEnabled});
      firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_set](methodChannelFirebaseApp.name, methodChannelFirebaseApp);
      firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[$_set](methodChannelFirebaseApp.name, response.pluginConstants);
    }
    get apps() {
      return firebase_core_platform_interface.MethodChannelFirebase.appInstances[$values][$toList]({growable: false});
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core_platform_interface.FirebaseAppPlatform, (function* initializeApp() {
        if (!firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized) {
          yield this[_initializeCore$]();
        }
        if (name == null || name === "[DEFAULT]") {
          let defaultApp = firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get]("[DEFAULT]");
          let _options = options;
          if (platform.defaultTargetPlatform === platform.TargetPlatform.android && defaultApp == null && _options == null) {
            let options = (yield firebase_core_platform_interface.MethodChannelFirebase.api.optionsFromResource());
            _options = new firebase_core_platform_interface.FirebaseOptions.fromPigeon(options);
          }
          if (defaultApp == null && _options != null) {
            this[_initializeFirebaseAppFromMap](yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeApp("[DEFAULT]", new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: _options.apiKey, appId: _options.appId, messagingSenderId: _options.messagingSenderId, projectId: _options.projectId, authDomain: _options.authDomain, databaseURL: _options.databaseURL, storageBucket: _options.storageBucket, measurementId: _options.measurementId, trackingId: _options.trackingId, deepLinkURLScheme: _options.deepLinkURLScheme, androidClientId: _options.androidClientId, iosClientId: _options.iosClientId, iosBundleId: _options.iosBundleId, appGroupId: _options.appGroupId})));
            defaultApp = firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get]("[DEFAULT]");
          }
          if (defaultApp == null && _options == null) {
            dart.throw(firebase_core_platform_interface.coreNotInitialized());
          }
          if (defaultApp != null && _options != null) {
            if (_options.apiKey !== defaultApp.options.apiKey || _options.databaseURL != null && _options.databaseURL != defaultApp.options.databaseURL || _options.storageBucket != null && _options.storageBucket != defaultApp.options.storageBucket) {
              dart.throw(firebase_core_platform_interface.duplicateApp("[DEFAULT]"));
            }
          }
          return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get]("[DEFAULT]"));
        }
        if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating a secondary Firebase app.", I[8], 143, 7, "options != null");
        if (firebase_core_platform_interface.MethodChannelFirebase.appInstances[$containsKey](name)) {
          let existingApp = dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get](name));
          if (dart.nullCheck(options).apiKey !== existingApp.options.apiKey || options.databaseURL != null && options.databaseURL != existingApp.options.databaseURL || options.storageBucket != null && options.storageBucket != existingApp.options.storageBucket) {
            dart.throw(firebase_core_platform_interface.duplicateApp(name));
          } else {
            return existingApp;
          }
        }
        this[_initializeFirebaseAppFromMap](yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeApp(name, new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: dart.nullCheck(options).apiKey, appId: options.appId, messagingSenderId: options.messagingSenderId, projectId: options.projectId, authDomain: options.authDomain, databaseURL: options.databaseURL, storageBucket: options.storageBucket, measurementId: options.measurementId, trackingId: options.trackingId, deepLinkURLScheme: options.deepLinkURLScheme, androidClientId: options.androidClientId, iosClientId: options.iosClientId, iosBundleId: options.iosBundleId, appGroupId: options.appGroupId})));
        return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get](name));
      }).bind(this));
    }
    app(name = "[DEFAULT]") {
      if (firebase_core_platform_interface.MethodChannelFirebase.appInstances[$containsKey](name)) {
        return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get](name));
      }
      dart.throw(firebase_core_platform_interface.noAppExists(name));
    }
    static ['_#new#tearOff']() {
      return new firebase_core_platform_interface.MethodChannelFirebase.new();
    }
  };
  (firebase_core_platform_interface.MethodChannelFirebase.new = function() {
    firebase_core_platform_interface.MethodChannelFirebase.__proto__.new.call(this);
    ;
  }).prototype = firebase_core_platform_interface.MethodChannelFirebase.prototype;
  dart.addTypeTests(firebase_core_platform_interface.MethodChannelFirebase);
  dart.addTypeCaches(firebase_core_platform_interface.MethodChannelFirebase);
  dart.setMethodSignature(firebase_core_platform_interface.MethodChannelFirebase, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.MethodChannelFirebase.__proto__),
    [_initializeCore$]: dart.fnType(async.Future$(dart.void), []),
    [_initializeFirebaseAppFromMap]: dart.fnType(dart.void, [messages$46pigeon.PigeonInitializeResponse])
  }));
  dart.setLibraryUri(firebase_core_platform_interface.MethodChannelFirebase, I[4]);
  dart.setStaticFieldSignature(firebase_core_platform_interface.MethodChannelFirebase, () => ['appInstances', 'isCoreInitialized', 'api']);
  dart.defineLazy(firebase_core_platform_interface.MethodChannelFirebase, {
    /*firebase_core_platform_interface.MethodChannelFirebase.appInstances*/get appInstances() {
      return new (T$.IdentityMapOfString$MethodChannelFirebaseApp()).new();
    },
    set appInstances(value) {},
    /*firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized*/get isCoreInitialized() {
      return false;
    },
    set isCoreInitialized(value) {},
    /*firebase_core_platform_interface.MethodChannelFirebase.api*/get api() {
      return new messages$46pigeon.FirebaseCoreHostApi.new();
    },
    set api(value) {}
  }, false);
  var _isDeleted = dart.privateName(firebase_core_platform_interface, "_isDeleted");
  var _api = dart.privateName(firebase_core_platform_interface, "_api");
  var _isAutomaticDataCollectionEnabled$ = dart.privateName(firebase_core_platform_interface, "_isAutomaticDataCollectionEnabled");
  firebase_core_platform_interface.MethodChannelFirebaseApp = class MethodChannelFirebaseApp extends firebase_core_platform_interface.FirebaseAppPlatform {
    static ['_#new#tearOff'](name, options, opts) {
      let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
      return new firebase_core_platform_interface.MethodChannelFirebaseApp.new(name, options, {isAutomaticDataCollectionEnabled: isAutomaticDataCollectionEnabled});
    }
    get isAutomaticDataCollectionEnabled() {
      return this[_isAutomaticDataCollectionEnabled$];
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        if (this[_isDefault]) {
          dart.throw(firebase_core_platform_interface.noDefaultAppDelete());
        }
        if (this[_isDeleted]) {
          return;
        }
        yield this[_api].delete(this.name);
        firebase_core_platform_interface.MethodChannelFirebase.appInstances[$remove](this.name);
        firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[$remove](this.name);
        this[_isDeleted] = true;
      }).bind(this));
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return async.async(dart.void, (function* setAutomaticDataCollectionEnabled() {
        yield this[_api].setAutomaticDataCollectionEnabled(this.name, enabled);
        this[_isAutomaticDataCollectionEnabled$] = enabled;
      }).bind(this));
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return async.async(dart.void, (function* setAutomaticResourceManagementEnabled() {
        yield this[_api].setAutomaticResourceManagementEnabled(this.name, enabled);
      }).bind(this));
    }
  };
  (firebase_core_platform_interface.MethodChannelFirebaseApp.new = function(name, options, opts) {
    let t6;
    let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
    this[_isDeleted] = false;
    this[_api] = new messages$46pigeon.FirebaseAppHostApi.new();
    this[_isAutomaticDataCollectionEnabled$] = core.bool.as((t6 = isAutomaticDataCollectionEnabled, t6 == null ? false : t6));
    firebase_core_platform_interface.MethodChannelFirebaseApp.__proto__.new.call(this, name, options);
    ;
  }).prototype = firebase_core_platform_interface.MethodChannelFirebaseApp.prototype;
  dart.addTypeTests(firebase_core_platform_interface.MethodChannelFirebaseApp);
  dart.addTypeCaches(firebase_core_platform_interface.MethodChannelFirebaseApp);
  dart.setLibraryUri(firebase_core_platform_interface.MethodChannelFirebaseApp, I[4]);
  dart.setFieldSignature(firebase_core_platform_interface.MethodChannelFirebaseApp, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.MethodChannelFirebaseApp.__proto__),
    [_isDeleted]: dart.fieldType(core.bool),
    [_isAutomaticDataCollectionEnabled$]: dart.fieldType(core.bool),
    [_api]: dart.finalFieldType(messages$46pigeon.FirebaseAppHostApi)
  }));
  firebase_core_platform_interface.noAppExists = function noAppExists(appName) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "no-app", message: "No Firebase App '" + appName + "' has been created - call Firebase.initializeApp()"});
  };
  firebase_core_platform_interface.duplicateApp = function duplicateApp(appName) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "duplicate-app", message: "A Firebase App named \"" + appName + "\" already exists"});
  };
  firebase_core_platform_interface.noDefaultAppInitialization = function noDefaultAppInitialization() {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", message: "The " + "[DEFAULT]" + " app cannot be initialized here. " + "To initialize the default app, follow the installation instructions " + "for the specific platform you are developing with."});
  };
  firebase_core_platform_interface.coreNotInitialized = function coreNotInitialized() {
    let message = "Firebase has not been correctly initialized.\n\nUsually this means you've attempted to use a Firebase service before calling `Firebase.initializeApp`.\n\nView the documentation for more information: https://firebase.flutter.dev/docs/overview#initialization\n    ";
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "not-initialized", message: message});
  };
  firebase_core_platform_interface.noDefaultAppDelete = function noDefaultAppDelete() {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", message: "The default Firebase app instance cannot be deleted."});
  };
  dart.defineLazy(firebase_core_platform_interface, {
    /*firebase_core_platform_interface.defaultFirebaseAppName*/get defaultFirebaseAppName() {
      return "[DEFAULT]";
    }
  }, false);
  js$['DomConsoleExtension|get#debug'] = function DomConsoleExtension$124get$35debug($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "debug");
  };
  js$['DomConsoleExtension|get#info'] = function DomConsoleExtension$124get$35info($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "info");
  };
  js$['DomConsoleExtension|get#log'] = function DomConsoleExtension$124get$35log($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "log");
  };
  js$['DomConsoleExtension|get#warn'] = function DomConsoleExtension$124get$35warn($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "warn");
  };
  js$['DomConsoleExtension|get#error'] = function DomConsoleExtension$124get$35error($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "error");
  };
  js$['DomErrorExtension|get#message'] = function DomErrorExtension$124get$35message($this) {
    return js_util.getProperty(T$.StringN(), $this, "message");
  };
  js$['DomErrorExtension|get#stack'] = function DomErrorExtension$124get$35stack($this) {
    return js_util.getProperty(T$.StringN(), $this, "stack");
  };
  js$['DomErrorExtension|get#name'] = function DomErrorExtension$124get$35name($this) {
    return js_util.getProperty(core.String, $this, "name");
  };
  js$['DomErrorExtension|get#cause'] = function DomErrorExtension$124get$35cause($this) {
    return js_util.getProperty(T$.ObjectN(), $this, "cause");
  };
  js$['DomTrustedTypePolicyFactoryExtension|createPolicy'] = function DomTrustedTypePolicyFactoryExtension$124createPolicy($this, policyName, policyOptions) {
    return js_util._callMethodUnchecked2(dart.packageJSType("DomTrustedTypePolicy", true), $this, "createPolicy", policyName, policyOptions);
  };
  js$['DomTrustedTypePolicyFactoryExtension|get#createPolicy'] = function DomTrustedTypePolicyFactoryExtension$124get$35createPolicy($this) {
    return dart.fn((policyName, policyOptions) => js$['DomTrustedTypePolicyFactoryExtension|createPolicy']($this, policyName, policyOptions), T$.StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy());
  };
  js$['DomTrustedTypePolicyExtension|createScriptURL'] = function DomTrustedTypePolicyExtension$124createScriptURL($this, input) {
    return js_util._callMethodUnchecked1(dart.packageJSType("DomTrustedScriptUrl", true), $this, "createScriptURL", input);
  };
  js$['DomTrustedTypePolicyExtension|get#createScriptURL'] = function DomTrustedTypePolicyExtension$124get$35createScriptURL($this) {
    return dart.fn(input => js$['DomTrustedTypePolicyExtension|createScriptURL']($this, input), T$.StringToDomTrustedScriptUrl());
  };
  core$.initializeApp = function initializeApp(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    name == null ? name = "[DEFAULT]" : null;
    return app$.App.getInstance(dart.global.firebase_core.initializeApp({apiKey: apiKey, authDomain: authDomain, databaseURL: databaseURL, projectId: projectId, storageBucket: storageBucket, messagingSenderId: messagingSenderId, measurementId: measurementId, appId: appId}, name));
  };
  core$.app = function app$1(name = null) {
    return app$.App.getInstance(name != null ? dart.global.firebase_core.getApp(name) : dart.global.firebase_core.getApp());
  };
  dart.copyProperties(core$, {
    get apps() {
      return dart.global.firebase_core.getApps()[$map](app$.App, dart.fn(e => app$.App.getInstance(dart.packageJSType("firebase_core.FirebaseApp", false).as(e)), T$.dynamicToApp()))[$toList]();
    }
  });
  var apiKey$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.apiKey");
  var appId$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.appId");
  var messagingSenderId$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.messagingSenderId");
  var projectId$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.projectId");
  var authDomain$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.authDomain");
  var databaseURL$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.databaseURL");
  var storageBucket$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.storageBucket");
  var measurementId$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.measurementId");
  var trackingId$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.trackingId");
  var deepLinkURLScheme$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.deepLinkURLScheme");
  var androidClientId$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.androidClientId");
  var iosClientId$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.iosClientId");
  var iosBundleId$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.iosBundleId");
  var appGroupId$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.appGroupId");
  messages$46pigeon.PigeonFirebaseOptions = class PigeonFirebaseOptions extends core.Object {
    get apiKey() {
      return this[apiKey$0];
    }
    set apiKey(value) {
      this[apiKey$0] = value;
    }
    get appId() {
      return this[appId$0];
    }
    set appId(value) {
      this[appId$0] = value;
    }
    get messagingSenderId() {
      return this[messagingSenderId$0];
    }
    set messagingSenderId(value) {
      this[messagingSenderId$0] = value;
    }
    get projectId() {
      return this[projectId$0];
    }
    set projectId(value) {
      this[projectId$0] = value;
    }
    get authDomain() {
      return this[authDomain$0];
    }
    set authDomain(value) {
      this[authDomain$0] = value;
    }
    get databaseURL() {
      return this[databaseURL$0];
    }
    set databaseURL(value) {
      this[databaseURL$0] = value;
    }
    get storageBucket() {
      return this[storageBucket$0];
    }
    set storageBucket(value) {
      this[storageBucket$0] = value;
    }
    get measurementId() {
      return this[measurementId$0];
    }
    set measurementId(value) {
      this[measurementId$0] = value;
    }
    get trackingId() {
      return this[trackingId$0];
    }
    set trackingId(value) {
      this[trackingId$0] = value;
    }
    get deepLinkURLScheme() {
      return this[deepLinkURLScheme$0];
    }
    set deepLinkURLScheme(value) {
      this[deepLinkURLScheme$0] = value;
    }
    get androidClientId() {
      return this[androidClientId$0];
    }
    set androidClientId(value) {
      this[androidClientId$0] = value;
    }
    get iosClientId() {
      return this[iosClientId$0];
    }
    set iosClientId(value) {
      this[iosClientId$0] = value;
    }
    get iosBundleId() {
      return this[iosBundleId$0];
    }
    set iosBundleId(value) {
      this[iosBundleId$0] = value;
    }
    get appGroupId() {
      return this[appGroupId$0];
    }
    set appGroupId(value) {
      this[appGroupId$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
      let appId = opts && 'appId' in opts ? opts.appId : null;
      let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
      let projectId = opts && 'projectId' in opts ? opts.projectId : null;
      let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
      let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
      let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
      let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
      let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
      let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
      let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
      let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
      return new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: apiKey, appId: appId, messagingSenderId: messagingSenderId, projectId: projectId, authDomain: authDomain, databaseURL: databaseURL, storageBucket: storageBucket, measurementId: measurementId, trackingId: trackingId, deepLinkURLScheme: deepLinkURLScheme, androidClientId: androidClientId, iosClientId: iosClientId, iosBundleId: iosBundleId, appGroupId: appGroupId});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.apiKey, this.appId, this.messagingSenderId, this.projectId, this.authDomain, this.databaseURL, this.storageBucket, this.measurementId, this.trackingId, this.deepLinkURLScheme, this.androidClientId, this.iosClientId, this.iosBundleId, this.appGroupId]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: core.String.as(dart.nullCheck(result[$_get](0))), appId: core.String.as(dart.nullCheck(result[$_get](1))), messagingSenderId: core.String.as(dart.nullCheck(result[$_get](2))), projectId: core.String.as(dart.nullCheck(result[$_get](3))), authDomain: T$.StringN().as(result[$_get](4)), databaseURL: T$.StringN().as(result[$_get](5)), storageBucket: T$.StringN().as(result[$_get](6)), measurementId: T$.StringN().as(result[$_get](7)), trackingId: T$.StringN().as(result[$_get](8)), deepLinkURLScheme: T$.StringN().as(result[$_get](9)), androidClientId: T$.StringN().as(result[$_get](10)), iosClientId: T$.StringN().as(result[$_get](11)), iosBundleId: T$.StringN().as(result[$_get](12)), appGroupId: T$.StringN().as(result[$_get](13))});
    }
  };
  (messages$46pigeon.PigeonFirebaseOptions.new = function(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
    let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
    let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
    let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
    let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
    let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
    this[apiKey$0] = apiKey;
    this[appId$0] = appId;
    this[messagingSenderId$0] = messagingSenderId;
    this[projectId$0] = projectId;
    this[authDomain$0] = authDomain;
    this[databaseURL$0] = databaseURL;
    this[storageBucket$0] = storageBucket;
    this[measurementId$0] = measurementId;
    this[trackingId$0] = trackingId;
    this[deepLinkURLScheme$0] = deepLinkURLScheme;
    this[androidClientId$0] = androidClientId;
    this[iosClientId$0] = iosClientId;
    this[iosBundleId$0] = iosBundleId;
    this[appGroupId$0] = appGroupId;
    ;
  }).prototype = messages$46pigeon.PigeonFirebaseOptions.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonFirebaseOptions);
  dart.addTypeCaches(messages$46pigeon.PigeonFirebaseOptions);
  dart.setMethodSignature(messages$46pigeon.PigeonFirebaseOptions, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonFirebaseOptions.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonFirebaseOptions, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonFirebaseOptions, I[9]);
  dart.setFieldSignature(messages$46pigeon.PigeonFirebaseOptions, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonFirebaseOptions.__proto__),
    apiKey: dart.fieldType(core.String),
    appId: dart.fieldType(core.String),
    messagingSenderId: dart.fieldType(core.String),
    projectId: dart.fieldType(core.String),
    authDomain: dart.fieldType(dart.nullable(core.String)),
    databaseURL: dart.fieldType(dart.nullable(core.String)),
    storageBucket: dart.fieldType(dart.nullable(core.String)),
    measurementId: dart.fieldType(dart.nullable(core.String)),
    trackingId: dart.fieldType(dart.nullable(core.String)),
    deepLinkURLScheme: dart.fieldType(dart.nullable(core.String)),
    androidClientId: dart.fieldType(dart.nullable(core.String)),
    iosClientId: dart.fieldType(dart.nullable(core.String)),
    iosBundleId: dart.fieldType(dart.nullable(core.String)),
    appGroupId: dart.fieldType(dart.nullable(core.String))
  }));
  var name$1 = dart.privateName(messages$46pigeon, "PigeonInitializeResponse.name");
  var options$0 = dart.privateName(messages$46pigeon, "PigeonInitializeResponse.options");
  var isAutomaticDataCollectionEnabled$ = dart.privateName(messages$46pigeon, "PigeonInitializeResponse.isAutomaticDataCollectionEnabled");
  var pluginConstants$ = dart.privateName(messages$46pigeon, "PigeonInitializeResponse.pluginConstants");
  messages$46pigeon.PigeonInitializeResponse = class PigeonInitializeResponse extends core.Object {
    get name() {
      return this[name$1];
    }
    set name(value) {
      this[name$1] = value;
    }
    get options() {
      return this[options$0];
    }
    set options(value) {
      this[options$0] = value;
    }
    get isAutomaticDataCollectionEnabled() {
      return this[isAutomaticDataCollectionEnabled$];
    }
    set isAutomaticDataCollectionEnabled(value) {
      this[isAutomaticDataCollectionEnabled$] = value;
    }
    get pluginConstants() {
      return this[pluginConstants$];
    }
    set pluginConstants(value) {
      this[pluginConstants$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      return new messages$46pigeon.PigeonInitializeResponse.new({name: name, options: options, isAutomaticDataCollectionEnabled: isAutomaticDataCollectionEnabled, pluginConstants: pluginConstants});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.name, this.options.encode(), this.isAutomaticDataCollectionEnabled, this.pluginConstants]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonInitializeResponse.new({name: core.String.as(dart.nullCheck(result[$_get](0))), options: messages$46pigeon.PigeonFirebaseOptions.decode(T$.ListOfObjectN().as(dart.nullCheck(result[$_get](1)))), isAutomaticDataCollectionEnabled: T$.boolN().as(result[$_get](2)), pluginConstants: dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(result[$_get](3)))[$cast](T$.StringN(), T$.ObjectN())});
    }
  };
  (messages$46pigeon.PigeonInitializeResponse.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let options = opts && 'options' in opts ? opts.options : null;
    let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
    let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
    this[name$1] = name;
    this[options$0] = options;
    this[isAutomaticDataCollectionEnabled$] = isAutomaticDataCollectionEnabled;
    this[pluginConstants$] = pluginConstants;
    ;
  }).prototype = messages$46pigeon.PigeonInitializeResponse.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonInitializeResponse);
  dart.addTypeCaches(messages$46pigeon.PigeonInitializeResponse);
  dart.setMethodSignature(messages$46pigeon.PigeonInitializeResponse, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonInitializeResponse.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonInitializeResponse, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonInitializeResponse, I[9]);
  dart.setFieldSignature(messages$46pigeon.PigeonInitializeResponse, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonInitializeResponse.__proto__),
    name: dart.fieldType(core.String),
    options: dart.fieldType(messages$46pigeon.PigeonFirebaseOptions),
    isAutomaticDataCollectionEnabled: dart.fieldType(dart.nullable(core.bool)),
    pluginConstants: dart.fieldType(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))
  }));
  messages$46pigeon._FirebaseCoreHostApiCodec = class _FirebaseCoreHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._FirebaseCoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonFirebaseOptions.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonInitializeResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonFirebaseOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonInitializeResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._FirebaseCoreHostApiCodec.new = function() {
    messages$46pigeon._FirebaseCoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._FirebaseCoreHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._FirebaseCoreHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._FirebaseCoreHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._FirebaseCoreHostApiCodec, I[9]);
  var _binaryMessenger = dart.privateName(messages$46pigeon, "_binaryMessenger");
  messages$46pigeon.FirebaseCoreHostApi = class FirebaseCoreHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.FirebaseCoreHostApi.new({binaryMessenger: binaryMessenger});
    }
    initializeApp(arg_appName, arg_initializeAppRequest) {
      return async.async(messages$46pigeon.PigeonInitializeResponse, (function* initializeApp() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", messages$46pigeon.FirebaseCoreHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_initializeAppRequest])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonInitializeResponseN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    initializeCore() {
      return async.async(T$.ListOfPigeonInitializeResponseN(), (function* initializeCore() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", messages$46pigeon.FirebaseCoreHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(null));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[$_get](0)))[$cast](T$.PigeonInitializeResponseN());
        }
      }).bind(this));
    }
    optionsFromResource() {
      return async.async(messages$46pigeon.PigeonFirebaseOptions, (function* optionsFromResource() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.optionsFromResource", messages$46pigeon.FirebaseCoreHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(null));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonFirebaseOptionsN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.FirebaseCoreHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[_binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.FirebaseCoreHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.FirebaseCoreHostApi);
  dart.addTypeCaches(messages$46pigeon.FirebaseCoreHostApi);
  dart.setMethodSignature(messages$46pigeon.FirebaseCoreHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.FirebaseCoreHostApi.__proto__),
    initializeApp: dart.fnType(async.Future$(messages$46pigeon.PigeonInitializeResponse), [core.String, messages$46pigeon.PigeonFirebaseOptions]),
    initializeCore: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon.PigeonInitializeResponse))), []),
    optionsFromResource: dart.fnType(async.Future$(messages$46pigeon.PigeonFirebaseOptions), [])
  }));
  dart.setLibraryUri(messages$46pigeon.FirebaseCoreHostApi, I[9]);
  dart.setFieldSignature(messages$46pigeon.FirebaseCoreHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.FirebaseCoreHostApi.__proto__),
    [_binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.FirebaseCoreHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.FirebaseCoreHostApi, {
    /*messages$46pigeon.FirebaseCoreHostApi.codec*/get codec() {
      return C[8] || CT.C8;
    }
  }, false);
  messages$46pigeon.FirebaseAppHostApi = class FirebaseAppHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.FirebaseAppHostApi.new({binaryMessenger: binaryMessenger});
    }
    setAutomaticDataCollectionEnabled(arg_appName, arg_enabled) {
      return async.async(dart.void, (function* setAutomaticDataCollectionEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled", messages$46pigeon.FirebaseAppHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_enabled])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setAutomaticResourceManagementEnabled(arg_appName, arg_enabled) {
      return async.async(dart.void, (function* setAutomaticResourceManagementEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled", messages$46pigeon.FirebaseAppHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_enabled])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    delete(arg_appName) {
      return async.async(dart.void, (function* $delete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.delete", messages$46pigeon.FirebaseAppHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.FirebaseAppHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[_binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.FirebaseAppHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.FirebaseAppHostApi);
  dart.addTypeCaches(messages$46pigeon.FirebaseAppHostApi);
  dart.setMethodSignature(messages$46pigeon.FirebaseAppHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.FirebaseAppHostApi.__proto__),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.String, core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.String, core.bool]),
    delete: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setLibraryUri(messages$46pigeon.FirebaseAppHostApi, I[9]);
  dart.setFieldSignature(messages$46pigeon.FirebaseAppHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.FirebaseAppHostApi.__proto__),
    [_binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.FirebaseAppHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.FirebaseAppHostApi, {
    /*messages$46pigeon.FirebaseAppHostApi.codec*/get codec() {
      return C[9] || CT.C9;
    }
  }, false);
  plugin_platform_interface.MockPlatformInterfaceMixin = class MockPlatformInterfaceMixin extends core.Object {};
  (plugin_platform_interface.MockPlatformInterfaceMixin.new = function() {
    ;
  }).prototype = plugin_platform_interface.MockPlatformInterfaceMixin.prototype;
  dart.addTypeTests(plugin_platform_interface.MockPlatformInterfaceMixin);
  dart.addTypeCaches(plugin_platform_interface.MockPlatformInterfaceMixin);
  plugin_platform_interface.MockPlatformInterfaceMixin[dart.implements] = () => [plugin_platform_interface.PlatformInterface];
  dart.setLibraryUri(plugin_platform_interface.MockPlatformInterfaceMixin, I[3]);
  mocks.MockFirebaseApp = class MockFirebaseApp extends core.Object {
    initializeApp(appName, initializeAppRequest) {
      return async.async(messages$46pigeon.PigeonInitializeResponse, function* initializeApp() {
        return new messages$46pigeon.PigeonInitializeResponse.new({name: appName, options: new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"}), pluginConstants: new (T$.IdentityMapOfStringN$ObjectN()).new()});
      });
    }
    initializeCore() {
      return async.async(T$.ListOfPigeonInitializeResponseN(), function* initializeCore() {
        return T$.JSArrayOfPigeonInitializeResponseN().of([new messages$46pigeon.PigeonInitializeResponse.new({name: "[DEFAULT]", options: new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"}), pluginConstants: new (T$.IdentityMapOfStringN$ObjectN()).new()})]);
      });
    }
    optionsFromResource() {
      return async.async(messages$46pigeon.PigeonFirebaseOptions, function* optionsFromResource() {
        return new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"});
      });
    }
    static ['_#new#tearOff']() {
      return new mocks.MockFirebaseApp.new();
    }
  };
  (mocks.MockFirebaseApp.new = function() {
    ;
  }).prototype = mocks.MockFirebaseApp.prototype;
  dart.addTypeTests(mocks.MockFirebaseApp);
  dart.addTypeCaches(mocks.MockFirebaseApp);
  mocks.MockFirebaseApp[dart.implements] = () => [test_api.TestFirebaseCoreHostApi];
  dart.setMethodSignature(mocks.MockFirebaseApp, () => ({
    __proto__: dart.getMethods(mocks.MockFirebaseApp.__proto__),
    initializeApp: dart.fnType(async.Future$(messages$46pigeon.PigeonInitializeResponse), [core.String, messages$46pigeon.PigeonFirebaseOptions]),
    initializeCore: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon.PigeonInitializeResponse))), []),
    optionsFromResource: dart.fnType(async.Future$(messages$46pigeon.PigeonFirebaseOptions), [])
  }));
  dart.setLibraryUri(mocks.MockFirebaseApp, I[10]);
  mocks.setupFirebaseCoreMocks = function setupFirebaseCoreMocks() {
    test_api.TestFirebaseCoreHostApi.setup(new mocks.MockFirebaseApp.new());
  };
  test_api._TestFirebaseCoreHostApiCodec = class _TestFirebaseCoreHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new test_api._TestFirebaseCoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonFirebaseOptions.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonInitializeResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonFirebaseOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonInitializeResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (test_api._TestFirebaseCoreHostApiCodec.new = function() {
    test_api._TestFirebaseCoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = test_api._TestFirebaseCoreHostApiCodec.prototype;
  dart.addTypeTests(test_api._TestFirebaseCoreHostApiCodec);
  dart.addTypeCaches(test_api._TestFirebaseCoreHostApiCodec);
  dart.setLibraryUri(test_api._TestFirebaseCoreHostApiCodec, I[11]);
  test_api.TestFirebaseCoreHostApi = class TestFirebaseCoreHostApi extends core.Object {
    static get _testBinaryMessengerBinding() {
      return binding$.TestDefaultBinaryMessengerBinding.instance;
    }
    static setup(api, opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null.", I[12], 69, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null, expected non-null String.", I[12], 73, 18, "arg_appName != null");
            let arg_initializeAppRequest = T$.PigeonFirebaseOptionsN().as(args[$_get](1));
            if (!(arg_initializeAppRequest != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null, expected non-null PigeonFirebaseOptions.", I[12], 77, 18, "arg_initializeAppRequest != null");
            let output = (yield api.initializeApp(dart.nullCheck(arg_appName), dart.nullCheck(arg_initializeAppRequest)));
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            let output = (yield api.initializeCore());
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.optionsFromResource", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            let output = (yield api.optionsFromResource());
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
    }
  };
  (test_api.TestFirebaseCoreHostApi.new = function() {
    ;
  }).prototype = test_api.TestFirebaseCoreHostApi.prototype;
  dart.addTypeTests(test_api.TestFirebaseCoreHostApi);
  dart.addTypeCaches(test_api.TestFirebaseCoreHostApi);
  dart.setStaticMethodSignature(test_api.TestFirebaseCoreHostApi, () => ['setup']);
  dart.setStaticGetterSignature(test_api.TestFirebaseCoreHostApi, () => ['_testBinaryMessengerBinding']);
  dart.setLibraryUri(test_api.TestFirebaseCoreHostApi, I[11]);
  dart.setStaticFieldSignature(test_api.TestFirebaseCoreHostApi, () => ['codec']);
  dart.defineLazy(test_api.TestFirebaseCoreHostApi, {
    /*test_api.TestFirebaseCoreHostApi.codec*/get codec() {
      return C[10] || CT.C10;
    }
  }, false);
  test_api.TestFirebaseAppHostApi = class TestFirebaseAppHostApi extends core.Object {
    static get _testBinaryMessengerBinding() {
      return binding$.TestDefaultBinaryMessengerBinding.instance;
    }
    static setup(api, opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null.", I[12], 149, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null, expected non-null String.", I[12], 153, 18, "arg_appName != null");
            let arg_enabled = T$.boolN().as(args[$_get](1));
            if (!(arg_enabled != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null, expected non-null bool.", I[12], 156, 18, "arg_enabled != null");
            yield api.setAutomaticDataCollectionEnabled(dart.nullCheck(arg_appName), dart.nullCheck(arg_enabled));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null.", I[12], 176, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null, expected non-null String.", I[12], 180, 18, "arg_appName != null");
            let arg_enabled = T$.boolN().as(args[$_get](1));
            if (!(arg_enabled != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null, expected non-null bool.", I[12], 183, 18, "arg_enabled != null");
            yield api.setAutomaticResourceManagementEnabled(dart.nullCheck(arg_appName), dart.nullCheck(arg_enabled));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.delete", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.delete was null.", I[12], 202, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.delete was null, expected non-null String.", I[12], 206, 18, "arg_appName != null");
            yield api.delete(dart.nullCheck(arg_appName));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
    }
  };
  (test_api.TestFirebaseAppHostApi.new = function() {
    ;
  }).prototype = test_api.TestFirebaseAppHostApi.prototype;
  dart.addTypeTests(test_api.TestFirebaseAppHostApi);
  dart.addTypeCaches(test_api.TestFirebaseAppHostApi);
  dart.setStaticMethodSignature(test_api.TestFirebaseAppHostApi, () => ['setup']);
  dart.setStaticGetterSignature(test_api.TestFirebaseAppHostApi, () => ['_testBinaryMessengerBinding']);
  dart.setLibraryUri(test_api.TestFirebaseAppHostApi, I[11]);
  dart.setStaticFieldSignature(test_api.TestFirebaseAppHostApi, () => ['codec']);
  dart.defineLazy(test_api.TestFirebaseAppHostApi, {
    /*test_api.TestFirebaseAppHostApi.codec*/get codec() {
      return C[9] || CT.C9;
    }
  }, false);
  var appInstance$ = dart.privateName(platform_interface_firebase_dynamic_links, "FirebaseDynamicLinksPlatform.appInstance");
  platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform = class FirebaseDynamicLinksPlatform extends plugin_platform_interface.PlatformInterface {
    get appInstance() {
      return this[appInstance$];
    }
    set appInstance(value) {
      super.appInstance = value;
    }
    get app() {
      let t19;
      t19 = this.appInstance;
      return t19 == null ? firebase_core.Firebase.app() : t19;
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform.instance.delegateFor({app: app});
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform.instanceFor({app: app});
    }
    static get instance() {
      let t19;
      t19 = platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform._instance;
      return t19 == null ? platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform._instance = new method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.new() : t19;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform._token);
      platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform._instance = instance;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    get onLink() {
      dart.throw(new core.UnimplementedError.new("onLink is not implemented"));
    }
    getInitialLink() {
      dart.throw(new core.UnimplementedError.new("getInitialLink() is not implemented"));
    }
    getDynamicLink(url) {
      return async.async(T$.PendingDynamicLinkDataN(), function* getDynamicLink() {
        dart.throw(new core.UnimplementedError.new("getDynamicLink() is not implemented"));
      });
    }
    buildLink(parameters) {
      return async.async(core.Uri, function* buildLink() {
        dart.throw(new core.UnimplementedError.new("buildLink() is not implemented"));
      });
    }
    buildShortLink(parameters, opts) {
      let shortLinkType = opts && 'shortLinkType' in opts ? opts.shortLinkType : C[2] || CT.C2;
      return async.async(short_dynamic_link.ShortDynamicLink, function* buildShortLink() {
        dart.throw(new core.UnimplementedError.new("buildShortLink() is not implemented"));
      });
    }
    _equals(other) {
      if (other == null) return false;
      return platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform.is(other) && other.app.name === this.app.name;
    }
    get hashCode() {
      return this.toString()[$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform)) + "(app: " + this.app.name + ")";
    }
  };
  (platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform.new = function(opts) {
    let appInstance = opts && 'appInstance' in opts ? opts.appInstance : null;
    this[appInstance$] = appInstance;
    platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform.__proto__.new.call(this, {token: platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform._token});
    ;
  }).prototype = platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform.prototype;
  dart.addTypeTests(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform);
  dart.addTypeCaches(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform);
  dart.setMethodSignature(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, [], {}, {app: firebase_core.FirebaseApp}),
    getInitialLink: dart.fnType(async.Future$(dart.nullable(pending_dynamic_link_data.PendingDynamicLinkData)), []),
    getDynamicLink: dart.fnType(async.Future$(dart.nullable(pending_dynamic_link_data.PendingDynamicLinkData)), [core.Uri]),
    buildLink: dart.fnType(async.Future$(core.Uri), [dynamic_link_parameters.DynamicLinkParameters]),
    buildShortLink: dart.fnType(async.Future$(short_dynamic_link.ShortDynamicLink), [dynamic_link_parameters.DynamicLinkParameters], {shortLinkType: short_dynamic_link_type.ShortDynamicLinkType}, {})
  }));
  dart.setStaticMethodSignature(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, () => ['instanceFor']);
  dart.setGetterSignature(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform.__proto__),
    app: firebase_core.FirebaseApp,
    onLink: async.Stream$(pending_dynamic_link_data.PendingDynamicLinkData)
  }));
  dart.setStaticGetterSignature(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, I[13]);
  dart.setFieldSignature(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, () => ({
    __proto__: dart.getFields(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform.__proto__),
    appInstance: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp))
  }));
  dart.setStaticFieldSignature(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, () => ['_token', '_instance']);
  dart.defineExtensionMethods(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, ['hashCode']);
  dart.defineLazy(platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform, {
    /*platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {}
  }, false);
  var android$ = dart.privateName(pending_dynamic_link_data, "PendingDynamicLinkData.android");
  var ios$ = dart.privateName(pending_dynamic_link_data, "PendingDynamicLinkData.ios");
  var link$ = dart.privateName(pending_dynamic_link_data, "PendingDynamicLinkData.link");
  var utmParameters$ = dart.privateName(pending_dynamic_link_data, "PendingDynamicLinkData.utmParameters");
  pending_dynamic_link_data.PendingDynamicLinkData = class PendingDynamicLinkData extends core.Object {
    get android() {
      return this[android$];
    }
    set android(value) {
      super.android = value;
    }
    get ios() {
      return this[ios$];
    }
    set ios(value) {
      super.ios = value;
    }
    get link() {
      return this[link$];
    }
    set link(value) {
      super.link = value;
    }
    get utmParameters() {
      return this[utmParameters$];
    }
    set utmParameters(value) {
      super.utmParameters = value;
    }
    static ['_#new#tearOff'](opts) {
      let link = opts && 'link' in opts ? opts.link : null;
      let android = opts && 'android' in opts ? opts.android : null;
      let ios = opts && 'ios' in opts ? opts.ios : null;
      let utmParameters = opts && 'utmParameters' in opts ? opts.utmParameters : C[11] || CT.C11;
      return new pending_dynamic_link_data.PendingDynamicLinkData.new({link: link, android: android, ios: ios, utmParameters: utmParameters});
    }
    asMap() {
      let t19, t19$;
      return new (T$.IdentityMapOfString$dynamic()).from(["ios", (t19 = this.ios, t19 == null ? null : t19.asMap()), "android", (t19$ = this.android, t19$ == null ? null : t19$.asMap()), "link", this.link.toString(), "utmParameters", this.utmParameters]);
    }
    toString() {
      return dart.str(dart.wrapType(pending_dynamic_link_data.PendingDynamicLinkData)) + "(" + dart.str(this.asMap()) + ")";
    }
  };
  (pending_dynamic_link_data.PendingDynamicLinkData.new = function(opts) {
    let link = opts && 'link' in opts ? opts.link : null;
    let android = opts && 'android' in opts ? opts.android : null;
    let ios = opts && 'ios' in opts ? opts.ios : null;
    let utmParameters = opts && 'utmParameters' in opts ? opts.utmParameters : C[11] || CT.C11;
    this[link$] = link;
    this[android$] = android;
    this[ios$] = ios;
    this[utmParameters$] = utmParameters;
    ;
  }).prototype = pending_dynamic_link_data.PendingDynamicLinkData.prototype;
  dart.addTypeTests(pending_dynamic_link_data.PendingDynamicLinkData);
  dart.addTypeCaches(pending_dynamic_link_data.PendingDynamicLinkData);
  dart.setMethodSignature(pending_dynamic_link_data.PendingDynamicLinkData, () => ({
    __proto__: dart.getMethods(pending_dynamic_link_data.PendingDynamicLinkData.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(pending_dynamic_link_data.PendingDynamicLinkData, I[14]);
  dart.setFieldSignature(pending_dynamic_link_data.PendingDynamicLinkData, () => ({
    __proto__: dart.getFields(pending_dynamic_link_data.PendingDynamicLinkData.__proto__),
    android: dart.finalFieldType(dart.nullable(pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid)),
    ios: dart.finalFieldType(dart.nullable(pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS)),
    link: dart.finalFieldType(core.Uri),
    utmParameters: dart.finalFieldType(core.Map$(core.String, dart.nullable(core.String)))
  }));
  dart.defineExtensionMethods(pending_dynamic_link_data.PendingDynamicLinkData, ['toString']);
  var clickTimestamp$ = dart.privateName(pending_dynamic_link_data_android, "PendingDynamicLinkDataAndroid.clickTimestamp");
  var minimumVersion$ = dart.privateName(pending_dynamic_link_data_android, "PendingDynamicLinkDataAndroid.minimumVersion");
  pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid = class PendingDynamicLinkDataAndroid extends core.Object {
    get clickTimestamp() {
      return this[clickTimestamp$];
    }
    set clickTimestamp(value) {
      super.clickTimestamp = value;
    }
    get minimumVersion() {
      return this[minimumVersion$];
    }
    set minimumVersion(value) {
      super.minimumVersion = value;
    }
    static ['_#new#tearOff'](opts) {
      let clickTimestamp = opts && 'clickTimestamp' in opts ? opts.clickTimestamp : null;
      let minimumVersion = opts && 'minimumVersion' in opts ? opts.minimumVersion : null;
      return new pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid.new({clickTimestamp: clickTimestamp, minimumVersion: minimumVersion});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["clickTimestamp", this.clickTimestamp, "minimumVersion", this.minimumVersion]);
    }
    toString() {
      return dart.str(dart.wrapType(pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid.new = function(opts) {
    let clickTimestamp = opts && 'clickTimestamp' in opts ? opts.clickTimestamp : null;
    let minimumVersion = opts && 'minimumVersion' in opts ? opts.minimumVersion : null;
    this[clickTimestamp$] = clickTimestamp;
    this[minimumVersion$] = minimumVersion;
    ;
  }).prototype = pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid.prototype;
  dart.addTypeTests(pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid);
  dart.addTypeCaches(pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid);
  dart.setMethodSignature(pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid, () => ({
    __proto__: dart.getMethods(pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid, I[15]);
  dart.setFieldSignature(pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid, () => ({
    __proto__: dart.getFields(pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid.__proto__),
    clickTimestamp: dart.finalFieldType(dart.nullable(core.int)),
    minimumVersion: dart.finalFieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid, ['toString']);
  var minimumVersion$0 = dart.privateName(pending_dynamic_link_data_ios, "PendingDynamicLinkDataIOS.minimumVersion");
  var matchType$ = dart.privateName(pending_dynamic_link_data_ios, "PendingDynamicLinkDataIOS.matchType");
  pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS = class PendingDynamicLinkDataIOS extends core.Object {
    get minimumVersion() {
      return this[minimumVersion$0];
    }
    set minimumVersion(value) {
      super.minimumVersion = value;
    }
    get matchType() {
      return this[matchType$];
    }
    set matchType(value) {
      super.matchType = value;
    }
    static ['_#new#tearOff'](opts) {
      let minimumVersion = opts && 'minimumVersion' in opts ? opts.minimumVersion : null;
      let matchType = opts && 'matchType' in opts ? opts.matchType : null;
      return new pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS.new({minimumVersion: minimumVersion, matchType: matchType});
    }
    asMap() {
      let t19;
      return new (T$.IdentityMapOfString$dynamic()).from(["minimumVersion", this.minimumVersion, "matchType", (t19 = this.matchType, t19 == null ? null : t19.index)]);
    }
    toString() {
      return dart.str(dart.wrapType(pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS.new = function(opts) {
    let minimumVersion = opts && 'minimumVersion' in opts ? opts.minimumVersion : null;
    let matchType = opts && 'matchType' in opts ? opts.matchType : null;
    this[minimumVersion$0] = minimumVersion;
    this[matchType$] = matchType;
    ;
  }).prototype = pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS.prototype;
  dart.addTypeTests(pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS);
  dart.addTypeCaches(pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS);
  dart.setMethodSignature(pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS, () => ({
    __proto__: dart.getMethods(pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS, I[16]);
  dart.setFieldSignature(pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS, () => ({
    __proto__: dart.getFields(pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS.__proto__),
    minimumVersion: dart.finalFieldType(dart.nullable(core.String)),
    matchType: dart.finalFieldType(dart.nullable(match_type.MatchType))
  }));
  dart.defineExtensionMethods(pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS, ['toString']);
  var shortUrl$ = dart.privateName(short_dynamic_link, "ShortDynamicLink.shortUrl");
  var type$ = dart.privateName(short_dynamic_link, "ShortDynamicLink.type");
  var previewLink$ = dart.privateName(short_dynamic_link, "ShortDynamicLink.previewLink");
  var warnings$ = dart.privateName(short_dynamic_link, "ShortDynamicLink.warnings");
  short_dynamic_link.ShortDynamicLink = class ShortDynamicLink extends core.Object {
    get shortUrl() {
      return this[shortUrl$];
    }
    set shortUrl(value) {
      super.shortUrl = value;
    }
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get previewLink() {
      return this[previewLink$];
    }
    set previewLink(value) {
      super.previewLink = value;
    }
    get warnings() {
      return this[warnings$];
    }
    set warnings(value) {
      super.warnings = value;
    }
    static ['_#new#tearOff'](opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let shortUrl = opts && 'shortUrl' in opts ? opts.shortUrl : null;
      let warnings = opts && 'warnings' in opts ? opts.warnings : null;
      let previewLink = opts && 'previewLink' in opts ? opts.previewLink : null;
      return new short_dynamic_link.ShortDynamicLink.new({type: type, shortUrl: shortUrl, warnings: warnings, previewLink: previewLink});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["shortUrl", this.shortUrl.toString(), "previewLink", dart.toString(this.previewLink), "warnings", this.warnings]);
    }
    toString() {
      return dart.str(dart.wrapType(short_dynamic_link.ShortDynamicLink)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (short_dynamic_link.ShortDynamicLink.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let shortUrl = opts && 'shortUrl' in opts ? opts.shortUrl : null;
    let warnings = opts && 'warnings' in opts ? opts.warnings : null;
    let previewLink = opts && 'previewLink' in opts ? opts.previewLink : null;
    this[type$] = type;
    this[shortUrl$] = shortUrl;
    this[warnings$] = warnings;
    this[previewLink$] = previewLink;
    ;
  }).prototype = short_dynamic_link.ShortDynamicLink.prototype;
  dart.addTypeTests(short_dynamic_link.ShortDynamicLink);
  dart.addTypeCaches(short_dynamic_link.ShortDynamicLink);
  dart.setMethodSignature(short_dynamic_link.ShortDynamicLink, () => ({
    __proto__: dart.getMethods(short_dynamic_link.ShortDynamicLink.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(short_dynamic_link.ShortDynamicLink, I[17]);
  dart.setFieldSignature(short_dynamic_link.ShortDynamicLink, () => ({
    __proto__: dart.getFields(short_dynamic_link.ShortDynamicLink.__proto__),
    shortUrl: dart.finalFieldType(core.Uri),
    type: dart.finalFieldType(short_dynamic_link_type.ShortDynamicLinkType),
    previewLink: dart.finalFieldType(dart.nullable(core.Uri)),
    warnings: dart.finalFieldType(dart.nullable(core.List$(core.String)))
  }));
  dart.defineExtensionMethods(short_dynamic_link.ShortDynamicLink, ['toString']);
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  short_dynamic_link_type.ShortDynamicLinkType = class ShortDynamicLinkType extends core._Enum {
    [_enumToString]() {
      return "ShortDynamicLinkType." + this[_name];
    }
  };
  (short_dynamic_link_type.ShortDynamicLinkType.new = function(index, name) {
    short_dynamic_link_type.ShortDynamicLinkType.__proto__.new.call(this, index, name);
    ;
  }).prototype = short_dynamic_link_type.ShortDynamicLinkType.prototype;
  dart.addTypeTests(short_dynamic_link_type.ShortDynamicLinkType);
  dart.addTypeCaches(short_dynamic_link_type.ShortDynamicLinkType);
  dart.setMethodSignature(short_dynamic_link_type.ShortDynamicLinkType, () => ({
    __proto__: dart.getMethods(short_dynamic_link_type.ShortDynamicLinkType.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(short_dynamic_link_type.ShortDynamicLinkType, I[18]);
  dart.setStaticFieldSignature(short_dynamic_link_type.ShortDynamicLinkType, () => ['values', 'unguessable', 'short']);
  dart.defineLazy(short_dynamic_link_type.ShortDynamicLinkType, {
    /*short_dynamic_link_type.ShortDynamicLinkType.values*/get values() {
      return C[12] || CT.C12;
    },
    /*short_dynamic_link_type.ShortDynamicLinkType.unguessable*/get unguessable() {
      return C[13] || CT.C13;
    },
    /*short_dynamic_link_type.ShortDynamicLinkType.short*/get short() {
      return C[2] || CT.C2;
    }
  }, false);
  var campaign$ = dart.privateName(google_analytics_parameters, "GoogleAnalyticsParameters.campaign");
  var content$ = dart.privateName(google_analytics_parameters, "GoogleAnalyticsParameters.content");
  var medium$ = dart.privateName(google_analytics_parameters, "GoogleAnalyticsParameters.medium");
  var source$ = dart.privateName(google_analytics_parameters, "GoogleAnalyticsParameters.source");
  var term$ = dart.privateName(google_analytics_parameters, "GoogleAnalyticsParameters.term");
  google_analytics_parameters.GoogleAnalyticsParameters = class GoogleAnalyticsParameters extends core.Object {
    get campaign() {
      return this[campaign$];
    }
    set campaign(value) {
      super.campaign = value;
    }
    get content() {
      return this[content$];
    }
    set content(value) {
      super.content = value;
    }
    get medium() {
      return this[medium$];
    }
    set medium(value) {
      super.medium = value;
    }
    get source() {
      return this[source$];
    }
    set source(value) {
      super.source = value;
    }
    get term() {
      return this[term$];
    }
    set term(value) {
      super.term = value;
    }
    static ['_#new#tearOff'](opts) {
      let campaign = opts && 'campaign' in opts ? opts.campaign : null;
      let content = opts && 'content' in opts ? opts.content : null;
      let medium = opts && 'medium' in opts ? opts.medium : null;
      let source = opts && 'source' in opts ? opts.source : null;
      let term = opts && 'term' in opts ? opts.term : null;
      return new google_analytics_parameters.GoogleAnalyticsParameters.new({campaign: campaign, content: content, medium: medium, source: source, term: term});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["campaign", this.campaign, "content", this.content, "medium", this.medium, "source", this.source, "term", this.term]);
    }
    toString() {
      return dart.str(dart.wrapType(google_analytics_parameters.GoogleAnalyticsParameters)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (google_analytics_parameters.GoogleAnalyticsParameters.new = function(opts) {
    let campaign = opts && 'campaign' in opts ? opts.campaign : null;
    let content = opts && 'content' in opts ? opts.content : null;
    let medium = opts && 'medium' in opts ? opts.medium : null;
    let source = opts && 'source' in opts ? opts.source : null;
    let term = opts && 'term' in opts ? opts.term : null;
    this[campaign$] = campaign;
    this[content$] = content;
    this[medium$] = medium;
    this[source$] = source;
    this[term$] = term;
    ;
  }).prototype = google_analytics_parameters.GoogleAnalyticsParameters.prototype;
  dart.addTypeTests(google_analytics_parameters.GoogleAnalyticsParameters);
  dart.addTypeCaches(google_analytics_parameters.GoogleAnalyticsParameters);
  dart.setMethodSignature(google_analytics_parameters.GoogleAnalyticsParameters, () => ({
    __proto__: dart.getMethods(google_analytics_parameters.GoogleAnalyticsParameters.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(google_analytics_parameters.GoogleAnalyticsParameters, I[19]);
  dart.setFieldSignature(google_analytics_parameters.GoogleAnalyticsParameters, () => ({
    __proto__: dart.getFields(google_analytics_parameters.GoogleAnalyticsParameters.__proto__),
    campaign: dart.finalFieldType(dart.nullable(core.String)),
    content: dart.finalFieldType(dart.nullable(core.String)),
    medium: dart.finalFieldType(dart.nullable(core.String)),
    source: dart.finalFieldType(dart.nullable(core.String)),
    term: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(google_analytics_parameters.GoogleAnalyticsParameters, ['toString']);
  var appStoreId$ = dart.privateName(ios_parameters, "IOSParameters.appStoreId");
  var bundleId$ = dart.privateName(ios_parameters, "IOSParameters.bundleId");
  var customScheme$ = dart.privateName(ios_parameters, "IOSParameters.customScheme");
  var fallbackUrl$ = dart.privateName(ios_parameters, "IOSParameters.fallbackUrl");
  var ipadBundleId$ = dart.privateName(ios_parameters, "IOSParameters.ipadBundleId");
  var ipadFallbackUrl$ = dart.privateName(ios_parameters, "IOSParameters.ipadFallbackUrl");
  var minimumVersion$1 = dart.privateName(ios_parameters, "IOSParameters.minimumVersion");
  ios_parameters.IOSParameters = class IOSParameters extends core.Object {
    get appStoreId() {
      return this[appStoreId$];
    }
    set appStoreId(value) {
      super.appStoreId = value;
    }
    get bundleId() {
      return this[bundleId$];
    }
    set bundleId(value) {
      super.bundleId = value;
    }
    get customScheme() {
      return this[customScheme$];
    }
    set customScheme(value) {
      super.customScheme = value;
    }
    get fallbackUrl() {
      return this[fallbackUrl$];
    }
    set fallbackUrl(value) {
      super.fallbackUrl = value;
    }
    get ipadBundleId() {
      return this[ipadBundleId$];
    }
    set ipadBundleId(value) {
      super.ipadBundleId = value;
    }
    get ipadFallbackUrl() {
      return this[ipadFallbackUrl$];
    }
    set ipadFallbackUrl(value) {
      super.ipadFallbackUrl = value;
    }
    get minimumVersion() {
      return this[minimumVersion$1];
    }
    set minimumVersion(value) {
      super.minimumVersion = value;
    }
    static ['_#new#tearOff'](opts) {
      let appStoreId = opts && 'appStoreId' in opts ? opts.appStoreId : null;
      let bundleId = opts && 'bundleId' in opts ? opts.bundleId : null;
      let customScheme = opts && 'customScheme' in opts ? opts.customScheme : null;
      let fallbackUrl = opts && 'fallbackUrl' in opts ? opts.fallbackUrl : null;
      let ipadBundleId = opts && 'ipadBundleId' in opts ? opts.ipadBundleId : null;
      let ipadFallbackUrl = opts && 'ipadFallbackUrl' in opts ? opts.ipadFallbackUrl : null;
      let minimumVersion = opts && 'minimumVersion' in opts ? opts.minimumVersion : null;
      return new ios_parameters.IOSParameters.new({appStoreId: appStoreId, bundleId: bundleId, customScheme: customScheme, fallbackUrl: fallbackUrl, ipadBundleId: ipadBundleId, ipadFallbackUrl: ipadFallbackUrl, minimumVersion: minimumVersion});
    }
    asMap() {
      let t21, t21$;
      return new (T$.IdentityMapOfString$dynamic()).from(["appStoreId", this.appStoreId, "bundleId", this.bundleId, "customScheme", this.customScheme, "fallbackUrl", (t21 = this.fallbackUrl, t21 == null ? null : dart.toString(t21)), "ipadBundleId", this.ipadBundleId, "ipadFallbackUrl", (t21$ = this.ipadFallbackUrl, t21$ == null ? null : dart.toString(t21$)), "minimumVersion", this.minimumVersion]);
    }
    toString() {
      return dart.str(dart.wrapType(ios_parameters.IOSParameters)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (ios_parameters.IOSParameters.new = function(opts) {
    let appStoreId = opts && 'appStoreId' in opts ? opts.appStoreId : null;
    let bundleId = opts && 'bundleId' in opts ? opts.bundleId : null;
    let customScheme = opts && 'customScheme' in opts ? opts.customScheme : null;
    let fallbackUrl = opts && 'fallbackUrl' in opts ? opts.fallbackUrl : null;
    let ipadBundleId = opts && 'ipadBundleId' in opts ? opts.ipadBundleId : null;
    let ipadFallbackUrl = opts && 'ipadFallbackUrl' in opts ? opts.ipadFallbackUrl : null;
    let minimumVersion = opts && 'minimumVersion' in opts ? opts.minimumVersion : null;
    this[appStoreId$] = appStoreId;
    this[bundleId$] = bundleId;
    this[customScheme$] = customScheme;
    this[fallbackUrl$] = fallbackUrl;
    this[ipadBundleId$] = ipadBundleId;
    this[ipadFallbackUrl$] = ipadFallbackUrl;
    this[minimumVersion$1] = minimumVersion;
    ;
  }).prototype = ios_parameters.IOSParameters.prototype;
  dart.addTypeTests(ios_parameters.IOSParameters);
  dart.addTypeCaches(ios_parameters.IOSParameters);
  dart.setMethodSignature(ios_parameters.IOSParameters, () => ({
    __proto__: dart.getMethods(ios_parameters.IOSParameters.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(ios_parameters.IOSParameters, I[20]);
  dart.setFieldSignature(ios_parameters.IOSParameters, () => ({
    __proto__: dart.getFields(ios_parameters.IOSParameters.__proto__),
    appStoreId: dart.finalFieldType(dart.nullable(core.String)),
    bundleId: dart.finalFieldType(core.String),
    customScheme: dart.finalFieldType(dart.nullable(core.String)),
    fallbackUrl: dart.finalFieldType(dart.nullable(core.Uri)),
    ipadBundleId: dart.finalFieldType(dart.nullable(core.String)),
    ipadFallbackUrl: dart.finalFieldType(dart.nullable(core.Uri)),
    minimumVersion: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(ios_parameters.IOSParameters, ['toString']);
  var affiliateToken$ = dart.privateName(itunes_connect_analytics_parameters, "ITunesConnectAnalyticsParameters.affiliateToken");
  var campaignToken$ = dart.privateName(itunes_connect_analytics_parameters, "ITunesConnectAnalyticsParameters.campaignToken");
  var providerToken$ = dart.privateName(itunes_connect_analytics_parameters, "ITunesConnectAnalyticsParameters.providerToken");
  itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters = class ITunesConnectAnalyticsParameters extends core.Object {
    get affiliateToken() {
      return this[affiliateToken$];
    }
    set affiliateToken(value) {
      super.affiliateToken = value;
    }
    get campaignToken() {
      return this[campaignToken$];
    }
    set campaignToken(value) {
      super.campaignToken = value;
    }
    get providerToken() {
      return this[providerToken$];
    }
    set providerToken(value) {
      super.providerToken = value;
    }
    static ['_#new#tearOff'](opts) {
      let affiliateToken = opts && 'affiliateToken' in opts ? opts.affiliateToken : null;
      let campaignToken = opts && 'campaignToken' in opts ? opts.campaignToken : null;
      let providerToken = opts && 'providerToken' in opts ? opts.providerToken : null;
      return new itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters.new({affiliateToken: affiliateToken, campaignToken: campaignToken, providerToken: providerToken});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["affiliateToken", this.affiliateToken, "campaignToken", this.campaignToken, "providerToken", this.providerToken]);
    }
    toString() {
      return dart.str(dart.wrapType(itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters.new = function(opts) {
    let affiliateToken = opts && 'affiliateToken' in opts ? opts.affiliateToken : null;
    let campaignToken = opts && 'campaignToken' in opts ? opts.campaignToken : null;
    let providerToken = opts && 'providerToken' in opts ? opts.providerToken : null;
    this[affiliateToken$] = affiliateToken;
    this[campaignToken$] = campaignToken;
    this[providerToken$] = providerToken;
    ;
  }).prototype = itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters.prototype;
  dart.addTypeTests(itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters);
  dart.addTypeCaches(itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters);
  dart.setMethodSignature(itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters, () => ({
    __proto__: dart.getMethods(itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters, I[21]);
  dart.setFieldSignature(itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters, () => ({
    __proto__: dart.getFields(itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters.__proto__),
    affiliateToken: dart.finalFieldType(dart.nullable(core.String)),
    campaignToken: dart.finalFieldType(dart.nullable(core.String)),
    providerToken: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters, ['toString']);
  var forcedRedirectEnabled$ = dart.privateName(navigation_info_parameters, "NavigationInfoParameters.forcedRedirectEnabled");
  navigation_info_parameters.NavigationInfoParameters = class NavigationInfoParameters extends core.Object {
    get forcedRedirectEnabled() {
      return this[forcedRedirectEnabled$];
    }
    set forcedRedirectEnabled(value) {
      super.forcedRedirectEnabled = value;
    }
    static ['_#new#tearOff'](opts) {
      let forcedRedirectEnabled = opts && 'forcedRedirectEnabled' in opts ? opts.forcedRedirectEnabled : null;
      return new navigation_info_parameters.NavigationInfoParameters.new({forcedRedirectEnabled: forcedRedirectEnabled});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["forcedRedirectEnabled", this.forcedRedirectEnabled]);
    }
    toString() {
      return dart.str(dart.wrapType(navigation_info_parameters.NavigationInfoParameters)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (navigation_info_parameters.NavigationInfoParameters.new = function(opts) {
    let forcedRedirectEnabled = opts && 'forcedRedirectEnabled' in opts ? opts.forcedRedirectEnabled : null;
    this[forcedRedirectEnabled$] = forcedRedirectEnabled;
    ;
  }).prototype = navigation_info_parameters.NavigationInfoParameters.prototype;
  dart.addTypeTests(navigation_info_parameters.NavigationInfoParameters);
  dart.addTypeCaches(navigation_info_parameters.NavigationInfoParameters);
  dart.setMethodSignature(navigation_info_parameters.NavigationInfoParameters, () => ({
    __proto__: dart.getMethods(navigation_info_parameters.NavigationInfoParameters.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(navigation_info_parameters.NavigationInfoParameters, I[22]);
  dart.setFieldSignature(navigation_info_parameters.NavigationInfoParameters, () => ({
    __proto__: dart.getFields(navigation_info_parameters.NavigationInfoParameters.__proto__),
    forcedRedirectEnabled: dart.finalFieldType(dart.nullable(core.bool))
  }));
  dart.defineExtensionMethods(navigation_info_parameters.NavigationInfoParameters, ['toString']);
  var description$ = dart.privateName(social_meta_tag_parameters, "SocialMetaTagParameters.description");
  var imageUrl$ = dart.privateName(social_meta_tag_parameters, "SocialMetaTagParameters.imageUrl");
  var title$ = dart.privateName(social_meta_tag_parameters, "SocialMetaTagParameters.title");
  social_meta_tag_parameters.SocialMetaTagParameters = class SocialMetaTagParameters extends core.Object {
    get description() {
      return this[description$];
    }
    set description(value) {
      super.description = value;
    }
    get imageUrl() {
      return this[imageUrl$];
    }
    set imageUrl(value) {
      super.imageUrl = value;
    }
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    static ['_#new#tearOff'](opts) {
      let description = opts && 'description' in opts ? opts.description : null;
      let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
      let title = opts && 'title' in opts ? opts.title : null;
      return new social_meta_tag_parameters.SocialMetaTagParameters.new({description: description, imageUrl: imageUrl, title: title});
    }
    asMap() {
      let t21;
      return new (T$.IdentityMapOfString$dynamic()).from(["description", this.description, "imageUrl", (t21 = this.imageUrl, t21 == null ? null : dart.toString(t21)), "title", this.title]);
    }
    toString() {
      return dart.str(dart.wrapType(social_meta_tag_parameters.SocialMetaTagParameters)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (social_meta_tag_parameters.SocialMetaTagParameters.new = function(opts) {
    let description = opts && 'description' in opts ? opts.description : null;
    let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
    let title = opts && 'title' in opts ? opts.title : null;
    this[description$] = description;
    this[imageUrl$] = imageUrl;
    this[title$] = title;
    ;
  }).prototype = social_meta_tag_parameters.SocialMetaTagParameters.prototype;
  dart.addTypeTests(social_meta_tag_parameters.SocialMetaTagParameters);
  dart.addTypeCaches(social_meta_tag_parameters.SocialMetaTagParameters);
  dart.setMethodSignature(social_meta_tag_parameters.SocialMetaTagParameters, () => ({
    __proto__: dart.getMethods(social_meta_tag_parameters.SocialMetaTagParameters.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(social_meta_tag_parameters.SocialMetaTagParameters, I[23]);
  dart.setFieldSignature(social_meta_tag_parameters.SocialMetaTagParameters, () => ({
    __proto__: dart.getFields(social_meta_tag_parameters.SocialMetaTagParameters.__proto__),
    description: dart.finalFieldType(dart.nullable(core.String)),
    imageUrl: dart.finalFieldType(dart.nullable(core.Uri)),
    title: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(social_meta_tag_parameters.SocialMetaTagParameters, ['toString']);
  var fallbackUrl$0 = dart.privateName(android_parameters, "AndroidParameters.fallbackUrl");
  var minimumVersion$2 = dart.privateName(android_parameters, "AndroidParameters.minimumVersion");
  var packageName$ = dart.privateName(android_parameters, "AndroidParameters.packageName");
  android_parameters.AndroidParameters = class AndroidParameters extends core.Object {
    get fallbackUrl() {
      return this[fallbackUrl$0];
    }
    set fallbackUrl(value) {
      super.fallbackUrl = value;
    }
    get minimumVersion() {
      return this[minimumVersion$2];
    }
    set minimumVersion(value) {
      super.minimumVersion = value;
    }
    get packageName() {
      return this[packageName$];
    }
    set packageName(value) {
      super.packageName = value;
    }
    static ['_#new#tearOff'](opts) {
      let fallbackUrl = opts && 'fallbackUrl' in opts ? opts.fallbackUrl : null;
      let minimumVersion = opts && 'minimumVersion' in opts ? opts.minimumVersion : null;
      let packageName = opts && 'packageName' in opts ? opts.packageName : null;
      return new android_parameters.AndroidParameters.new({fallbackUrl: fallbackUrl, minimumVersion: minimumVersion, packageName: packageName});
    }
    asMap() {
      let t21;
      return new (T$.IdentityMapOfString$dynamic()).from(["fallbackUrl", (t21 = this.fallbackUrl, t21 == null ? null : dart.toString(t21)), "minimumVersion", this.minimumVersion, "packageName", this.packageName]);
    }
    toString() {
      return dart.str(dart.wrapType(android_parameters.AndroidParameters)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (android_parameters.AndroidParameters.new = function(opts) {
    let fallbackUrl = opts && 'fallbackUrl' in opts ? opts.fallbackUrl : null;
    let minimumVersion = opts && 'minimumVersion' in opts ? opts.minimumVersion : null;
    let packageName = opts && 'packageName' in opts ? opts.packageName : null;
    this[fallbackUrl$0] = fallbackUrl;
    this[minimumVersion$2] = minimumVersion;
    this[packageName$] = packageName;
    ;
  }).prototype = android_parameters.AndroidParameters.prototype;
  dart.addTypeTests(android_parameters.AndroidParameters);
  dart.addTypeCaches(android_parameters.AndroidParameters);
  dart.setMethodSignature(android_parameters.AndroidParameters, () => ({
    __proto__: dart.getMethods(android_parameters.AndroidParameters.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(android_parameters.AndroidParameters, I[24]);
  dart.setFieldSignature(android_parameters.AndroidParameters, () => ({
    __proto__: dart.getFields(android_parameters.AndroidParameters.__proto__),
    fallbackUrl: dart.finalFieldType(dart.nullable(core.Uri)),
    minimumVersion: dart.finalFieldType(dart.nullable(core.int)),
    packageName: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(android_parameters.AndroidParameters, ['toString']);
  var androidParameters$ = dart.privateName(dynamic_link_parameters, "DynamicLinkParameters.androidParameters");
  var uriPrefix$ = dart.privateName(dynamic_link_parameters, "DynamicLinkParameters.uriPrefix");
  var googleAnalyticsParameters$ = dart.privateName(dynamic_link_parameters, "DynamicLinkParameters.googleAnalyticsParameters");
  var iosParameters$ = dart.privateName(dynamic_link_parameters, "DynamicLinkParameters.iosParameters");
  var itunesConnectAnalyticsParameters$ = dart.privateName(dynamic_link_parameters, "DynamicLinkParameters.itunesConnectAnalyticsParameters");
  var link$0 = dart.privateName(dynamic_link_parameters, "DynamicLinkParameters.link");
  var navigationInfoParameters$ = dart.privateName(dynamic_link_parameters, "DynamicLinkParameters.navigationInfoParameters");
  var socialMetaTagParameters$ = dart.privateName(dynamic_link_parameters, "DynamicLinkParameters.socialMetaTagParameters");
  var longDynamicLink$ = dart.privateName(dynamic_link_parameters, "DynamicLinkParameters.longDynamicLink");
  dynamic_link_parameters.DynamicLinkParameters = class DynamicLinkParameters extends core.Object {
    get androidParameters() {
      return this[androidParameters$];
    }
    set androidParameters(value) {
      super.androidParameters = value;
    }
    get uriPrefix() {
      return this[uriPrefix$];
    }
    set uriPrefix(value) {
      super.uriPrefix = value;
    }
    get googleAnalyticsParameters() {
      return this[googleAnalyticsParameters$];
    }
    set googleAnalyticsParameters(value) {
      super.googleAnalyticsParameters = value;
    }
    get iosParameters() {
      return this[iosParameters$];
    }
    set iosParameters(value) {
      super.iosParameters = value;
    }
    get itunesConnectAnalyticsParameters() {
      return this[itunesConnectAnalyticsParameters$];
    }
    set itunesConnectAnalyticsParameters(value) {
      super.itunesConnectAnalyticsParameters = value;
    }
    get link() {
      return this[link$0];
    }
    set link(value) {
      super.link = value;
    }
    get navigationInfoParameters() {
      return this[navigationInfoParameters$];
    }
    set navigationInfoParameters(value) {
      super.navigationInfoParameters = value;
    }
    get socialMetaTagParameters() {
      return this[socialMetaTagParameters$];
    }
    set socialMetaTagParameters(value) {
      super.socialMetaTagParameters = value;
    }
    get longDynamicLink() {
      return this[longDynamicLink$];
    }
    set longDynamicLink(value) {
      super.longDynamicLink = value;
    }
    static ['_#new#tearOff'](opts) {
      let link = opts && 'link' in opts ? opts.link : null;
      let uriPrefix = opts && 'uriPrefix' in opts ? opts.uriPrefix : null;
      let longDynamicLink = opts && 'longDynamicLink' in opts ? opts.longDynamicLink : null;
      let androidParameters = opts && 'androidParameters' in opts ? opts.androidParameters : null;
      let iosParameters = opts && 'iosParameters' in opts ? opts.iosParameters : null;
      let googleAnalyticsParameters = opts && 'googleAnalyticsParameters' in opts ? opts.googleAnalyticsParameters : null;
      let itunesConnectAnalyticsParameters = opts && 'itunesConnectAnalyticsParameters' in opts ? opts.itunesConnectAnalyticsParameters : null;
      let navigationInfoParameters = opts && 'navigationInfoParameters' in opts ? opts.navigationInfoParameters : null;
      let socialMetaTagParameters = opts && 'socialMetaTagParameters' in opts ? opts.socialMetaTagParameters : null;
      return new dynamic_link_parameters.DynamicLinkParameters.new({link: link, uriPrefix: uriPrefix, longDynamicLink: longDynamicLink, androidParameters: androidParameters, iosParameters: iosParameters, googleAnalyticsParameters: googleAnalyticsParameters, itunesConnectAnalyticsParameters: itunesConnectAnalyticsParameters, navigationInfoParameters: navigationInfoParameters, socialMetaTagParameters: socialMetaTagParameters});
    }
    asMap() {
      let t22, t22$, t22$0, t22$1, t22$2, t22$3;
      return (() => {
        let t21 = new (T$.IdentityMapOfString$dynamic()).new();
        t21[$_set]("uriPrefix", this.uriPrefix);
        t21[$_set]("link", this.link.toString());
        if (this.longDynamicLink != null) t21[$_set]("longDynamicLink", dart.toString(this.longDynamicLink));
        if (this.androidParameters != null) t21[$_set]("androidParameters", (t22 = this.androidParameters, t22 == null ? null : t22.asMap()));
        if (this.googleAnalyticsParameters != null) t21[$_set]("googleAnalyticsParameters", (t22$ = this.googleAnalyticsParameters, t22$ == null ? null : t22$.asMap()));
        if (this.iosParameters != null) t21[$_set]("iosParameters", (t22$0 = this.iosParameters, t22$0 == null ? null : t22$0.asMap()));
        if (this.itunesConnectAnalyticsParameters != null) t21[$_set]("itunesConnectAnalyticsParameters", (t22$1 = this.itunesConnectAnalyticsParameters, t22$1 == null ? null : t22$1.asMap()));
        if (this.navigationInfoParameters != null) t21[$_set]("navigationInfoParameters", (t22$2 = this.navigationInfoParameters, t22$2 == null ? null : t22$2.asMap()));
        if (this.socialMetaTagParameters != null) t21[$_set]("socialMetaTagParameters", (t22$3 = this.socialMetaTagParameters, t22$3 == null ? null : t22$3.asMap()));
        return t21;
      })();
    }
    toString() {
      return dart.str(dart.wrapType(dynamic_link_parameters.DynamicLinkParameters)) + "(" + dart.str(this.asMap()) + ")";
    }
  };
  (dynamic_link_parameters.DynamicLinkParameters.new = function(opts) {
    let link = opts && 'link' in opts ? opts.link : null;
    let uriPrefix = opts && 'uriPrefix' in opts ? opts.uriPrefix : null;
    let longDynamicLink = opts && 'longDynamicLink' in opts ? opts.longDynamicLink : null;
    let androidParameters = opts && 'androidParameters' in opts ? opts.androidParameters : null;
    let iosParameters = opts && 'iosParameters' in opts ? opts.iosParameters : null;
    let googleAnalyticsParameters = opts && 'googleAnalyticsParameters' in opts ? opts.googleAnalyticsParameters : null;
    let itunesConnectAnalyticsParameters = opts && 'itunesConnectAnalyticsParameters' in opts ? opts.itunesConnectAnalyticsParameters : null;
    let navigationInfoParameters = opts && 'navigationInfoParameters' in opts ? opts.navigationInfoParameters : null;
    let socialMetaTagParameters = opts && 'socialMetaTagParameters' in opts ? opts.socialMetaTagParameters : null;
    this[link$0] = link;
    this[uriPrefix$] = uriPrefix;
    this[longDynamicLink$] = longDynamicLink;
    this[androidParameters$] = androidParameters;
    this[iosParameters$] = iosParameters;
    this[googleAnalyticsParameters$] = googleAnalyticsParameters;
    this[itunesConnectAnalyticsParameters$] = itunesConnectAnalyticsParameters;
    this[navigationInfoParameters$] = navigationInfoParameters;
    this[socialMetaTagParameters$] = socialMetaTagParameters;
    ;
  }).prototype = dynamic_link_parameters.DynamicLinkParameters.prototype;
  dart.addTypeTests(dynamic_link_parameters.DynamicLinkParameters);
  dart.addTypeCaches(dynamic_link_parameters.DynamicLinkParameters);
  dart.setMethodSignature(dynamic_link_parameters.DynamicLinkParameters, () => ({
    __proto__: dart.getMethods(dynamic_link_parameters.DynamicLinkParameters.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(dynamic_link_parameters.DynamicLinkParameters, I[25]);
  dart.setFieldSignature(dynamic_link_parameters.DynamicLinkParameters, () => ({
    __proto__: dart.getFields(dynamic_link_parameters.DynamicLinkParameters.__proto__),
    androidParameters: dart.finalFieldType(dart.nullable(android_parameters.AndroidParameters)),
    uriPrefix: dart.finalFieldType(core.String),
    googleAnalyticsParameters: dart.finalFieldType(dart.nullable(google_analytics_parameters.GoogleAnalyticsParameters)),
    iosParameters: dart.finalFieldType(dart.nullable(ios_parameters.IOSParameters)),
    itunesConnectAnalyticsParameters: dart.finalFieldType(dart.nullable(itunes_connect_analytics_parameters.ITunesConnectAnalyticsParameters)),
    link: dart.finalFieldType(core.Uri),
    navigationInfoParameters: dart.finalFieldType(dart.nullable(navigation_info_parameters.NavigationInfoParameters)),
    socialMetaTagParameters: dart.finalFieldType(dart.nullable(social_meta_tag_parameters.SocialMetaTagParameters)),
    longDynamicLink: dart.finalFieldType(dart.nullable(core.Uri))
  }));
  dart.defineExtensionMethods(dynamic_link_parameters.DynamicLinkParameters, ['toString']);
  match_type.MatchType = class MatchType extends core._Enum {
    [_enumToString]() {
      return "MatchType." + this[_name];
    }
  };
  (match_type.MatchType.new = function(index, name) {
    match_type.MatchType.__proto__.new.call(this, index, name);
    ;
  }).prototype = match_type.MatchType.prototype;
  dart.addTypeTests(match_type.MatchType);
  dart.addTypeCaches(match_type.MatchType);
  dart.setMethodSignature(match_type.MatchType, () => ({
    __proto__: dart.getMethods(match_type.MatchType.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(match_type.MatchType, I[26]);
  dart.setStaticFieldSignature(match_type.MatchType, () => ['values', 'none', 'weak', 'high', 'unique']);
  dart.defineLazy(match_type.MatchType, {
    /*match_type.MatchType.values*/get values() {
      return C[14] || CT.C14;
    },
    /*match_type.MatchType.none*/get none() {
      return C[15] || CT.C15;
    },
    /*match_type.MatchType.weak*/get weak() {
      return C[16] || CT.C16;
    },
    /*match_type.MatchType.high*/get high() {
      return C[17] || CT.C17;
    },
    /*match_type.MatchType.unique*/get unique() {
      return C[18] || CT.C18;
    }
  }, false);
  var jsObject$ = dart.privateName(js$0, "JsObjectWrapper.jsObject");
  const _is_JsObjectWrapper_default = Symbol('_is_JsObjectWrapper_default');
  js$0.JsObjectWrapper$ = dart.generic(T => {
    class JsObjectWrapper extends core.Object {
      get jsObject() {
        return this[jsObject$];
      }
      set jsObject(value) {
        super.jsObject = value;
      }
    }
    (JsObjectWrapper.fromJsObject = function(jsObject) {
      this[jsObject$] = jsObject;
      ;
    }).prototype = JsObjectWrapper.prototype;
    dart.addTypeTests(JsObjectWrapper);
    JsObjectWrapper.prototype[_is_JsObjectWrapper_default] = true;
    dart.addTypeCaches(JsObjectWrapper);
    dart.setLibraryUri(JsObjectWrapper, I[27]);
    dart.setFieldSignature(JsObjectWrapper, () => ({
      __proto__: dart.getFields(JsObjectWrapper.__proto__),
      jsObject: dart.finalFieldType(T)
    }));
    return JsObjectWrapper;
  });
  js$0.JsObjectWrapper = js$0.JsObjectWrapper$();
  dart.addTypeTests(js$0.JsObjectWrapper, _is_JsObjectWrapper_default);
  app$.App = class App extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_core.FirebaseApp", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new app$.App._fromJsObject(jsObject);
    }
    get name() {
      return this.jsObject.name;
    }
    get options() {
      return this.jsObject.options;
    }
    static getInstance(jsObject) {
      let t27, t26, t25, t24;
      t24 = app$.App._expando;
      t25 = jsObject;
      t26 = t24._get(t25);
      return t26 == null ? (t27 = new app$.App._fromJsObject(jsObject), t24._set(t25, t27), t27) : t26;
    }
    delete() {
      return utils.handleThenable(dart.void, dart.global.firebase_core.deleteApp(this.jsObject));
    }
  };
  (app$.App._fromJsObject = function(jsObject) {
    app$.App.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = app$.App.prototype;
  dart.addTypeTests(app$.App);
  dart.addTypeCaches(app$.App);
  dart.setMethodSignature(app$.App, () => ({
    __proto__: dart.getMethods(app$.App.__proto__),
    delete: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(app$.App, () => ['getInstance']);
  dart.setGetterSignature(app$.App, () => ({
    __proto__: dart.getGetters(app$.App.__proto__),
    name: core.String,
    options: dart.packageJSType("FirebaseOptions", false)
  }));
  dart.setLibraryUri(app$.App, I[28]);
  dart.setStaticFieldSignature(app$.App, () => ['_expando']);
  dart.defineLazy(app$.App, {
    /*app$.App._expando*/get _expando() {
      return new (T$.ExpandoOfApp()).new();
    }
  }, false);
  var _getPendingDynamicLinkDataFromMap = dart.privateName(method_channel_firebase_dynamic_links, "_getPendingDynamicLinkDataFromMap");
  var _withChannelDefaults = dart.privateName(method_channel_firebase_dynamic_links, "_withChannelDefaults");
  var MethodChannel__binaryMessenger = dart.privateName(platform_channel, "MethodChannel._binaryMessenger");
  var StandardMethodCodec_messageCodec = dart.privateName(message_codecs, "StandardMethodCodec.messageCodec");
  var MethodChannel_codec = dart.privateName(platform_channel, "MethodChannel.codec");
  var MethodChannel_name = dart.privateName(platform_channel, "MethodChannel.name");
  method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks = class MethodChannelFirebaseDynamicLinks extends platform_interface_firebase_dynamic_links.FirebaseDynamicLinksPlatform {
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.new({app: app});
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.new({app: app});
    }
    [_withChannelDefaults](other) {
      let t25, t25$, t25$0;
      t25$0 = new (T$.IdentityMapOfString$dynamic()).from(["appName", (t25$ = (t25 = this.appInstance, t25 == null ? null : t25.name), t25$ == null ? "[DEFAULT]" : t25$)]);
      return (() => {
        t25$0[$addAll](other);
        return t25$0;
      })();
    }
    [_getPendingDynamicLinkDataFromMap](linkData) {
      if (linkData == null) return null;
      let link = linkData[$_get]("link");
      if (link == null) return null;
      let androidData = null;
      if (linkData[$_get]("android") != null) {
        let data = core.Map.as(linkData[$_get]("android"));
        androidData = new pending_dynamic_link_data_android.PendingDynamicLinkDataAndroid.new({clickTimestamp: T$.intN().as(data[$_get]("clickTimestamp")), minimumVersion: T$.intN().as(data[$_get]("minimumVersion"))});
      }
      let iosData = null;
      if (linkData[$_get]("ios") != null) {
        let data = core.Map.as(linkData[$_get]("ios"));
        let matchType = convert_match_type.convertMatchType(T$.intN().as(data[$_get]("matchType")));
        iosData = new pending_dynamic_link_data_ios.PendingDynamicLinkDataIOS.new({minimumVersion: T$.StringN().as(data[$_get]("minimumVersion")), matchType: matchType});
      }
      return new pending_dynamic_link_data.PendingDynamicLinkData.new({link: core.Uri.parse(core.String.as(link)), android: androidData, ios: iosData, utmParameters: linkData[$_get]("utmParameters") == null ? new (T$.IdentityMapOfString$StringN()).new() : T$.LinkedHashMapOfString$StringN().from(core.Map.as(linkData[$_get]("utmParameters")))});
    }
    getInitialLink() {
      return async.async(T$.PendingDynamicLinkDataN(), (function* getInitialLink() {
        try {
          let linkData = (yield method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.channel.invokeMapMethod(core.String, dart.dynamic, "FirebaseDynamicLinks#getInitialLink", this[_withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).new())));
          return this[_getPendingDynamicLinkDataFromMap](linkData);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let s = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, s);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getDynamicLink(url) {
      return async.async(T$.PendingDynamicLinkDataN(), (function* getDynamicLink() {
        try {
          let linkData = (yield method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.channel.invokeMapMethod(core.String, dart.dynamic, "FirebaseDynamicLinks#getDynamicLink", this[_withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["url", url.toString()]))));
          return this[_getPendingDynamicLinkDataFromMap](linkData);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let s = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, s);
          } else
            throw e$;
        }
      }).bind(this));
    }
    get onLink() {
      return method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks._onLinkController.stream;
    }
    buildLink(parameters) {
      return async.async(core.Uri, (function* buildLink() {
        try {
          let url = (yield method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.channel.invokeMethod(core.String, "FirebaseDynamicLinks#buildLink", this[_withChannelDefaults](parameters.asMap())));
          return core.Uri.parse(dart.nullCheck(url));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let s = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, s);
          } else
            throw e$;
        }
      }).bind(this));
    }
    buildShortLink(parameters, opts) {
      let shortLinkType = opts && 'shortLinkType' in opts ? opts.shortLinkType : C[2] || CT.C2;
      return async.async(short_dynamic_link.ShortDynamicLink, (function* buildShortLink() {
        let t29;
        try {
          let response = (yield method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.channel.invokeMapMethod(core.String, dart.dynamic, "FirebaseDynamicLinks#buildShortLink", this[_withChannelDefaults]((() => {
            let t28 = new (T$.IdentityMapOfString$dynamic()).new();
            t28[$_set]("shortLinkType", shortLinkType.index);
            t28[$addAll](parameters.asMap());
            return t28;
          })())));
          let warnings = T$.ListN().as(dart.nullCheck(response)[$_get]("warnings"));
          return new short_dynamic_link.ShortDynamicLink.new({type: shortLinkType, shortUrl: core.Uri.parse(core.String.as(response[$_get]("url"))), warnings: (t29 = warnings, t29 == null ? null : t29[$cast](core.String)), previewLink: response[$_get]("previewLink") != null ? core.Uri.parse(core.String.as(response[$_get]("previewLink"))) : null});
        } catch (e$) {
          let e = dart.getThrown(e$);
          let s = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, s);
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.__proto__.new.call(this, {appInstance: app});
    if (method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks._initialized) return;
    method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.channel.setMethodCallHandler(dart.fn(call => async.async(core.Null, (function*() {
      switch (call.method) {
        case "FirebaseDynamicLink#onLinkSuccess":
          {
            let event = T$.LinkedHashMapOfString$dynamic().from(core.Map.as(call.arguments));
            let data = this[_getPendingDynamicLinkDataFromMap](event);
            if (data != null) {
              method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks._onLinkController.add(data);
            }
            break;
          }
        case "FirebaseDynamicLink#onLinkError":
          {
            try {
              let error = T$.LinkedHashMapOfString$dynamic().from(core.Map.as(call.arguments));
              exception.convertPlatformException(error, core.StackTrace.current);
            } catch (e) {
              let err = dart.getThrown(e);
              let stack = dart.stackTrace(e);
              if (core.Object.is(err)) {
                method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks._onLinkController.addError(err, stack);
              } else
                throw e;
            }
            break;
          }
        default:
          {
            dart.throw(new core.UnimplementedError.new(call.method + " has not been implemented"));
          }
      }
    }).bind(this)), T$.MethodCallToFutureOfNull()));
    method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks._initialized = true;
  }).prototype = method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.prototype;
  dart.addTypeTests(method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks);
  dart.addTypeCaches(method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks);
  dart.setMethodSignature(method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks, () => ({
    __proto__: dart.getMethods(method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.__proto__),
    [_withChannelDefaults]: dart.fnType(core.Map$(core.String, dart.dynamic), [core.Map$(core.String, dart.dynamic)]),
    [_getPendingDynamicLinkDataFromMap]: dart.fnType(dart.nullable(pending_dynamic_link_data.PendingDynamicLinkData), [dart.nullable(core.Map)])
  }));
  dart.setLibraryUri(method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks, I[29]);
  dart.setStaticFieldSignature(method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks, () => ['_initialized', 'channel', '_onLinkController']);
  dart.defineLazy(method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks, {
    /*method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks._initialized*/get _initialized() {
      return false;
    },
    set _initialized(value) {},
    /*method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks.channel*/get channel() {
      return C[19] || CT.C19;
    },
    set channel(value) {},
    /*method_channel_firebase_dynamic_links.MethodChannelFirebaseDynamicLinks._onLinkController*/get _onLinkController() {
      return T$.StreamControllerOfPendingDynamicLinkData().broadcast();
    }
  }, false);
  convert_match_type.convertMatchType = function convertMatchType(matchType) {
    switch (matchType) {
      case 0:
        {
          return match_type.MatchType.none;
        }
      case 1:
        {
          return match_type.MatchType.weak;
        }
      case 2:
        {
          return match_type.MatchType.high;
        }
      case 3:
        {
          return match_type.MatchType.unique;
        }
      default:
        {
          return null;
        }
    }
  };
  exception.convertPlatformException = function convertPlatformException(exception, stackTrace) {
    exception$.convertPlatformExceptionToFirebaseException(exception, stackTrace, {plugin: "firebase_dynamic_links"});
  };
  js_interop.dartifyDate = function dartifyDate(jsObject) {
    if (js_util.hasProperty(jsObject, "toDateString")) {
      try {
        let date = jsObject;
        return new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(dart.dsend(date, 'getTime', [])));
      } catch (e) {
        let ex = dart.getThrown(e);
        if (core.NoSuchMethodError.is(ex)) {
          return null;
        } else
          throw e;
      }
    }
    return null;
  };
  utils.dartify = function dartify(jsObject, customDartify = null) {
    let t32;
    if (utils._isBasicType(jsObject)) {
      return jsObject;
    }
    if (core.Iterable.is(jsObject)) {
      return jsObject[$map](dart.dynamic, dart.fn(item => utils.dartify(item, customDartify), T$.dynamicTodynamic()))[$toList]();
    }
    let jsDate = js_interop.dartifyDate(dart.nullCheck(jsObject));
    if (jsDate != null) {
      return jsDate;
    }
    let value = (t32 = customDartify, t32 == null ? null : t32(jsObject));
    if (value == null) {
      let keys = dart.global.Object.keys(jsObject);
      let map = new (T$.IdentityMapOfString$dynamic()).new();
      for (let key of keys) {
        map[$_set](key, utils.dartify(js_util.getProperty(T$.ObjectN(), jsObject, key), customDartify));
      }
      return map;
    }
    return value;
  };
  utils.jsifyList = function jsifyList(list, customJsify = null) {
    return dart.global.Array.from(list[$map](dart.dynamic, dart.fn(item => utils.jsify(item, customJsify), T$.dynamicTodynamic()))[$toList]());
  };
  utils.jsify = function jsify(dartObject, customJsify = null) {
    let t32;
    if (utils._isBasicType(dartObject)) {
      if (dartObject == null) {
        return null;
      }
      return dartObject;
    }
    if (core.Iterable.is(dartObject)) {
      return utils.jsifyList(dartObject, customJsify);
    }
    if (core.Map.is(dartObject)) {
      let jsMap = js_util.newObject(dart.dynamic);
      dartObject[$forEach](dart.fn((key, value) => {
        js_util.setProperty(core.Object, core.Object.as(jsMap), core.Object.as(key), utils.jsify(value, customJsify));
      }, T$.dynamicAnddynamicTovoid()));
      return jsMap;
    }
    if (core.Function.is(dartObject)) {
      return js.allowInterop(core.Function, dartObject);
    }
    let value = (t32 = customJsify, t32 == null ? null : t32(dartObject));
    if (value == null) {
      dart.throw(new core.ArgumentError.value(dartObject, "dartObject", "Could not convert"));
    }
    return value;
  };
  utils.callMethod = function callMethod(jsObject, method, args) {
    return js_util.callMethod(dart.dynamic, jsObject, method, args);
  };
  utils._isBasicType = function _isBasicType(value) {
    if (value == null || typeof value == 'number' || typeof value == 'boolean' || typeof value == 'string') {
      return true;
    }
    return false;
  };
  utils.handleThenable = function handleThenable(T, thenable) {
    return async.async(T, function* handleThenable() {
      return js_util.promiseToFuture(T, thenable);
    });
  };
  utils.handleFutureWithMapper = function handleFutureWithMapper(T, S, future, mapper) {
    return new dart.global.Promise(js.allowInterop(core.Function, dart.fn((resolve, reject) => {
      future.then(core.Null, dart.fn(value => {
        let mappedValue = mapper(value);
        resolve(mappedValue);
      }, dart.fnType(core.Null, [T]))).catchError(dart.fn(error => reject(core.Object.as(error)), T$.dynamicTodynamic()));
    }, dart.fnType(core.Null, [dart.fnType(dart.dynamic, [S]), T$.ObjectTodynamic()]))));
  };
  _flutterfire_internals['ObjectX|guard'] = function ObjectX$124guard(T, R, $this, cb) {
    if (T.is($this)) return cb(T.as($this));
    return null;
  };
  _flutterfire_internals['ObjectX|get#guard'] = function ObjectX$124get$35guard(T, $this) {
    return dart.fn((R, cb) => _flutterfire_internals['ObjectX|guard'](T, R, $this, cb), dart.gFnType(R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [__t$RN(), [dart.fnType(R, [T])]];
    }, R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [T$.ObjectN()];
    }));
  };
  _flutterfire_internals['ObjectX|safeCast'] = function ObjectX$124safeCast(T, R, $this) {
    if (R.is($this)) return R.as($this);
    return null;
  };
  _flutterfire_internals['ObjectX|get#safeCast'] = function ObjectX$124get$35safeCast(T, $this) {
    return dart.fn(R => _flutterfire_internals['ObjectX|safeCast'](T, R, $this), T$.VoidToRN());
  };
  _flutterfire_internals._firebaseExceptionFromCoreFirebaseError = function _firebaseExceptionFromCoreFirebaseError(firebaseError, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    let code = codeParser(firebaseError.code);
    let message = messageParser != null ? messageParser(code, firebaseError.message) : firebaseError.message[$replaceFirst]("(" + firebaseError.code + ")", "");
    return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, message: message, code: code});
  };
  _flutterfire_internals._testException = function _testException(exception) {
    return dart.packageJSType("FirebaseError", false).is(exception);
  };
  _flutterfire_internals._mapException = function _mapException(exception, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    if (!_flutterfire_internals._testException(exception)) dart.assertFailed(null, I[30], 89, 10, "_testException(exception)");
    if (dart.packageJSType("FirebaseError", false).is(exception)) {
      return _flutterfire_internals._firebaseExceptionFromCoreFirebaseError(exception, {plugin: plugin, codeParser: codeParser, messageParser: messageParser});
    }
    dart.throw(new core.StateError.new("unrecognized error " + dart.str(exception)));
  };
  _flutterfire_internals.guardWebExceptions = function guardWebExceptions(R, cb, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    try {
      let value = cb();
      if (async.Future.is(value)) {
        return R.as(value.catchError(dart.fn((err, stack) => core.Error.throwWithStackTrace(_flutterfire_internals._mapException(err, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), core.StackTrace.as(stack)), T$.dynamicAnddynamicToNever()), {test: C[21] || CT.C21}));
      } else if (async.Stream.is(value)) {
        return R.as(value.handleError(dart.fn((err, stack) => core.Error.throwWithStackTrace(_flutterfire_internals._mapException(err, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), core.StackTrace.as(stack)), T$.dynamicAnddynamicToNever()), {test: C[21] || CT.C21}));
      }
      return value;
    } catch (e) {
      let error = dart.getThrown(e);
      let stack = dart.stackTrace(e);
      if (core.Object.is(error)) {
        if (!_flutterfire_internals._testException(error)) {
          dart.rethrow(e);
        }
        core.Error.throwWithStackTrace(_flutterfire_internals._mapException(error, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), stack);
      } else
        throw e;
    }
  };
  exception$.convertPlatformExceptionToFirebaseException = function convertPlatformExceptionToFirebaseException(exception, rawStackTrace, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let stackTrace = rawStackTrace;
    if (stackTrace[$_equals](core.StackTrace.empty)) {
      stackTrace = core.StackTrace.current;
    }
    if (!message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(exception, stackTrace);
    }
    core.Error.throwWithStackTrace(exception$.platformExceptionToFirebaseException(exception, {plugin: plugin}), stackTrace);
  };
  exception$.platformExceptionToFirebaseException = function platformExceptionToFirebaseException(platformException, opts) {
    let t37, t37$, t37$0;
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let details = platformException.details != null ? T$.LinkedHashMapOfString$Object().from(core.Map.as(platformException.details)) : null;
    let code = null;
    let message = (t37 = platformException.message, t37 == null ? "" : t37);
    if (details != null) {
      code = (t37$ = T$.StringN().as(details[$_get]("code")), t37$ == null ? code : t37$);
      message = (t37$0 = T$.StringN().as(details[$_get]("message")), t37$0 == null ? message : t37$0);
    }
    return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, code: code, message: message});
  };
  exception$['EventChannelExtension|receiveGuardedBroadcastStream'] = function EventChannelExtension$124receiveGuardedBroadcastStream($this, opts) {
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let incomingStackTrace = core.StackTrace.current;
    return $this.receiveBroadcastStream($arguments).handleError(dart.fn(error => onError(error, incomingStackTrace), T$.ObjectTodynamic()));
  };
  exception$['EventChannelExtension|get#receiveGuardedBroadcastStream'] = function EventChannelExtension$124get$35receiveGuardedBroadcastStream($this) {
    return dart.fn(opts => {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      return exception$['EventChannelExtension|receiveGuardedBroadcastStream']($this, {arguments: $arguments, onError: onError});
    }, T$.__ToStream());
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:firebase_core/firebase_core.dart": firebase_core,
    "package:firebase_dynamic_links/firebase_dynamic_links.dart": firebase_dynamic_links,
    "package:firebase_core_web/firebase_core_web.dart": firebase_core_web,
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart": firebase_core_platform_interface,
    "package:firebase_dynamic_links_platform_interface/firebase_dynamic_links_platform_interface.dart": firebase_dynamic_links_platform_interface,
    "package:firebase_core_web/src/interop/js.dart": js$,
    "package:firebase_core_web/src/interop/core.dart": core$,
    "package:firebase_core_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon,
    "package:plugin_platform_interface/plugin_platform_interface.dart": plugin_platform_interface,
    "package:firebase_core_platform_interface/src/pigeon/mocks.dart": mocks,
    "package:firebase_core_platform_interface/src/pigeon/test_api.dart": test_api,
    "package:firebase_dynamic_links_platform_interface/src/platform_interface/platform_interface_firebase_dynamic_links.dart": platform_interface_firebase_dynamic_links,
    "package:firebase_dynamic_links_platform_interface/src/pending_dynamic_link_data.dart": pending_dynamic_link_data,
    "package:firebase_dynamic_links_platform_interface/src/pending_dynamic_link_data_android.dart": pending_dynamic_link_data_android,
    "package:firebase_dynamic_links_platform_interface/src/pending_dynamic_link_data_ios.dart": pending_dynamic_link_data_ios,
    "package:firebase_dynamic_links_platform_interface/src/short_dynamic_link.dart": short_dynamic_link,
    "package:firebase_dynamic_links_platform_interface/src/short_dynamic_link_type.dart": short_dynamic_link_type,
    "package:firebase_dynamic_links_platform_interface/src/google_analytics_parameters.dart": google_analytics_parameters,
    "package:firebase_dynamic_links_platform_interface/src/ios_parameters.dart": ios_parameters,
    "package:firebase_dynamic_links_platform_interface/src/itunes_connect_analytics_parameters.dart": itunes_connect_analytics_parameters,
    "package:firebase_dynamic_links_platform_interface/src/navigation_info_parameters.dart": navigation_info_parameters,
    "package:firebase_dynamic_links_platform_interface/src/social_meta_tag_parameters.dart": social_meta_tag_parameters,
    "package:firebase_dynamic_links_platform_interface/src/android_parameters.dart": android_parameters,
    "package:firebase_dynamic_links_platform_interface/src/dynamic_link_parameters.dart": dynamic_link_parameters,
    "package:firebase_dynamic_links_platform_interface/src/match_type.dart": match_type,
    "package:firebase_core_web/src/interop/app.dart": app$,
    "package:firebase_core_web/src/interop/core_interop.dart": core_interop,
    "package:firebase_core_web/src/interop/app_interop.dart": app_interop,
    "package:firebase_dynamic_links_platform_interface/src/method_channel/method_channel_firebase_dynamic_links.dart": method_channel_firebase_dynamic_links,
    "package:firebase_core_web/firebase_core_web_interop.dart": firebase_core_web_interop,
    "package:firebase_dynamic_links_platform_interface/src/method_channel/utils/convert_match_type.dart": convert_match_type,
    "package:firebase_dynamic_links_platform_interface/src/method_channel/utils/exception.dart": exception,
    "package:firebase_core_web/src/interop/utils/es6_interop.dart": es6_interop,
    "package:firebase_core_web/src/interop/utils/func.dart": func,
    "package:firebase_core_web/src/interop/utils/js.dart": js$0,
    "package:firebase_core_web/src/interop/utils/js_interop.dart": js_interop,
    "package:firebase_core_web/src/interop/utils/utils.dart": utils,
    "package:_flutterfire_internals/_flutterfire_internals.dart": _flutterfire_internals,
    "package:_flutterfire_internals/src/exception.dart": exception$
  }, {
    "package:firebase_core/firebase_core.dart": ["src/firebase_app.dart", "src/firebase.dart"],
    "package:firebase_dynamic_links/firebase_dynamic_links.dart": ["src/firebase_dynamic_links.dart"],
    "package:firebase_core_web/firebase_core_web.dart": ["src/firebase_app_web.dart", "src/firebase_core_web.dart", "src/firebase_sdk_version.dart"],
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart": ["src/firebase_core_exceptions.dart", "src/firebase_exception.dart", "src/firebase_options.dart", "src/method_channel/method_channel_firebase.dart", "src/method_channel/method_channel_firebase_app.dart", "src/platform_interface/platform_interface_firebase.dart", "src/platform_interface/platform_interface_firebase_app.dart", "src/platform_interface/platform_interface_firebase_plugin.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core-2.24.2/lib/src/firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core-2.24.2/lib/src/firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/platform_interface/platform_interface_firebase_plugin.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links-5.4.8/lib/src/firebase_dynamic_links.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/platform_interface/platform_interface_firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_app_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_core_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/platform_interface/platform_interface_firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/firebase_core_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_sdk_version.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/firebase_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/firebase_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/method_channel/method_channel_firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/method_channel/method_channel_firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/firebase_core_exceptions.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/firebase_core_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/js.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/core.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/pigeon/mocks.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/pigeon/test_api.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/platform_interface/platform_interface_firebase_dynamic_links.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/pending_dynamic_link_data.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/pending_dynamic_link_data_android.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/pending_dynamic_link_data_ios.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/short_dynamic_link.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/short_dynamic_link_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/google_analytics_parameters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/ios_parameters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/itunes_connect_analytics_parameters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/navigation_info_parameters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/social_meta_tag_parameters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/android_parameters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/dynamic_link_parameters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/match_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/utils/js.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/method_channel/method_channel_firebase_dynamic_links.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/method_channel/utils/convert_match_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_dynamic_links_platform_interface-0.2.6+16/lib/src/method_channel/utils/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/utils/js_interop.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.16/lib/_flutterfire_internals.dart","/zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.16/lib/src/exception.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    firebase_core: firebase_core,
    firebase_dynamic_links: firebase_dynamic_links,
    firebase_core_web: firebase_core_web,
    firebase_core_platform_interface: firebase_core_platform_interface,
    firebase_dynamic_links_platform_interface: firebase_dynamic_links_platform_interface,
    src__interop__js: js$,
    src__interop__core: core$,
    src__pigeon__messages$46pigeon: messages$46pigeon,
    plugin_platform_interface: plugin_platform_interface,
    src__pigeon__mocks: mocks,
    src__pigeon__test_api: test_api,
    src__platform_interface__platform_interface_firebase_dynamic_links: platform_interface_firebase_dynamic_links,
    src__pending_dynamic_link_data: pending_dynamic_link_data,
    src__pending_dynamic_link_data_android: pending_dynamic_link_data_android,
    src__pending_dynamic_link_data_ios: pending_dynamic_link_data_ios,
    src__short_dynamic_link: short_dynamic_link,
    src__short_dynamic_link_type: short_dynamic_link_type,
    src__google_analytics_parameters: google_analytics_parameters,
    src__ios_parameters: ios_parameters,
    src__itunes_connect_analytics_parameters: itunes_connect_analytics_parameters,
    src__navigation_info_parameters: navigation_info_parameters,
    src__social_meta_tag_parameters: social_meta_tag_parameters,
    src__android_parameters: android_parameters,
    src__dynamic_link_parameters: dynamic_link_parameters,
    src__match_type: match_type,
    src__interop__app: app$,
    src__interop__core_interop: core_interop,
    src__interop__app_interop: app_interop,
    src__method_channel__method_channel_firebase_dynamic_links: method_channel_firebase_dynamic_links,
    firebase_core_web_interop: firebase_core_web_interop,
    src__method_channel__utils__convert_match_type: convert_match_type,
    src__method_channel__utils__exception: exception,
    src__interop__utils__es6_interop: es6_interop,
    src__interop__utils__func: func,
    src__interop__utils__js: js$0,
    src__interop__utils__js_interop: js_interop,
    src__interop__utils__utils: utils,
    _flutterfire_internals: _flutterfire_internals,
    src__exception: exception$
  };
}));

//# sourceMappingURL=main.js.map
